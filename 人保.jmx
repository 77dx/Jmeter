<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="人保" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">E:\miaomiao\apache-jmeter-4.0\myjar\zb_sign.jar,E:\miaomiao\apache-jmeter-4.0\lib\ext\commons-codec-1.12.jar,E:\miaomiao\apache-jmeter-4.0\lib\ext\fastjson-1.2.58.jar</stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="人保-测试环境" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">mp.flins.com.cn</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取七牛token" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;getQiniuToken&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
       &quot;requestTime&quot;:&quot;2019-08-16 12:12:12&quot;&#xd;
    },   &#xd;
    &quot;sign&quot;:&quot;${rbsign0}&quot;&#xd;
    &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取签名" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.flins.test.MD5WithRSAUtil1;

//获取第一个七牛sign
String qiniu_data = &quot;{\r\n&quot; + 
				&quot;        \&quot;requestTime\&quot;:\&quot;2019-08-16 12:12:12\&quot;\r\n&quot; + 
				&quot;    }&quot;;
String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;


String rbsign0 = MD5WithRSAUtil1.type_1(privateKey,pubKey,qiniu_data);
vars.put(&quot;rbsign0&quot;,rbsign0);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取七牛token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取key" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">keys</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.key</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${base64}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">upload-z2.qiniup.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/putb64/-1/key/${keys}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">UpToken ${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/octet-stream</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="把图片转换成base64" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.image.util.*;

String code = ImageUtil.base64(&quot;D:/images/76.jpg&quot;);
vars.put(&quot;base64&quot;,code);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取imageurl" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">imgUrl</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.key</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交图片" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
	&quot;appKey&quot;: &quot;key1&quot;,&#xd;
	&quot;apiCode&quot;: &quot;submitPic&quot;,&#xd;
	&quot;version&quot;: &quot;1.0&quot;,&#xd;
	&quot;data&quot;: {&#xd;
		&quot;imgUrl&quot;: &quot;RB20191206-13:44:550000017822&quot;,&#xd;
		&quot;filename&quot;: &quot;TR0.jpg&quot;,&#xd;
		&quot;bzId&quot;: &quot;${bzId}&quot;,&#xd;
		&quot;guId&quot;: &quot;0002&quot;,&#xd;
		&quot;gender&quot;: &quot;1&quot;,&#xd;
		&quot;channelCode&quot;: &quot;renbao&quot;,&#xd;
		&quot;channelName&quot;: &quot;人保&quot;,&#xd;
		&quot;benefitCode&quot;: &quot;dd222&quot;,&#xd;
		&quot;productName&quot;: &quot;666&quot;,&#xd;
		&quot;cpCode&quot;: &quot;6666&quot;,&#xd;
		&quot;cpName&quot;: &quot;5656&quot;,&#xd;
		&quot;planCode&quot;:&quot;3333&quot;,&#xd;
		&quot;cname&quot;:&quot;徐&quot;&#xd;
	},&#xd;
	&quot;sign&quot;: &quot;${rbsign}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取签名" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.util.All_util;
import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;
//获取随机数
String r = All_util.generateString(10);
String bzId = &quot;RB2019&quot; + r;
vars.put(&quot;bzId&quot;,bzId);

//提取imgUrl
String response_data = prev.getResponseDataAsString(); 
JSONObject object = JSONObject.parseObject(response_data);
//JSONObject data = object.getJSONObject(&quot;key&quot;);
String imgUrl = object.getString(&quot;key&quot;);
vars.put(&quot;imgUrl&quot;,imgUrl);
log.info(imgUrl);

//获取第一个sign
String rb_data = &quot;{\r\n&quot; + 
				&quot;		\&quot;imgUrl\&quot;: \&quot;${imgUrl}\&quot;,\r\n&quot; + 
				&quot;		\&quot;filename\&quot;: \&quot;TR0.jpg\&quot;,\r\n&quot; + 
				&quot;		\&quot;bzId\&quot;: \&quot;${bzId}\&quot;,\r\n&quot; + 
				&quot;		\&quot;guId\&quot;: \&quot;0002\&quot;,\r\n&quot; + 
				&quot;		\&quot;gender\&quot;: \&quot;1\&quot;,\r\n&quot; + 
				&quot;		\&quot;channelCode\&quot;: \&quot;renbao\&quot;,\r\n&quot; + 
				&quot;		\&quot;channelName\&quot;: \&quot;人保\&quot;,\r\n&quot; + 
				&quot;		\&quot;benefitCode\&quot;: \&quot;dd222\&quot;,\r\n&quot; + 
				&quot;		\&quot;productName\&quot;: \&quot;666\&quot;,\r\n&quot; + 
				&quot;		\&quot;cpCode\&quot;: \&quot;6666\&quot;,\r\n&quot; + 
				&quot;		\&quot;cpName\&quot;: \&quot;5656\&quot;,\r\n&quot; + 
				&quot;		\&quot;planCode\&quot;:\&quot;3333\&quot;,\r\n&quot; + 
				&quot;		\&quot;cname\&quot;:\&quot;赵月月123\&quot;\r\n&quot; + 
				&quot;	}&quot;;
String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;


String rbsign = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data);
vars.put(&quot;rbsign&quot;,rbsign);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询测评单" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;evaluateInfo&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;bzId&quot;:&quot;${bzId}&quot;&#xd;
    },&#xd;
    &quot;sign&quot;:&quot;${rbsign2}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;

//提取bzid
String response_data = prev.getResponseDataAsString(); 
JSONObject object = JSONObject.parseObject(response_data);
JSONObject data = object.getJSONObject(&quot;data&quot;);
String bzId = data.getString(&quot;bzId&quot;);
vars.put(&quot;bzId&quot;,bzId);


//获取第二个sign
String rb_data2 =&quot;{\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;&quot;+bzId+&quot;\&quot;\r\n&quot; + 
				&quot;    }&quot;;

String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;

String rbsign2 = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data2);
vars.put(&quot;rbsign2&quot;,rbsign2);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="反馈承保数据" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;feedbackInsurance&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;bzId&quot;:&quot;${bzId}&quot;,&#xd;
        &quot;serialNumber&quot;:&quot;${serialNumber}&quot;,&#xd;
        &quot;productName&quot;:&quot;sss&quot;,&#xd;
        &quot;benefitCode&quot;:&quot;geg&quot;,&#xd;
        &quot;cpCode&quot;:&quot;bgbg&quot;,&#xd;
        &quot;cpName&quot;:&quot;bhgtbh&quot;,&#xd;
        &quot;insuranceNo&quot;:&quot;gfrg&quot;,&#xd;
        &quot;premium&quot;:&quot;20.1&quot;,&#xd;
        &quot;insuranceStatus&quot;:&quot;grg&quot;,&#xd;
        &quot;idNumber&quot;:&quot;aaa&quot;,&#xd;
        &quot;insuranceTime&quot;:&quot;2015-01-01 11:11:11&quot;,&#xd;
        &quot;isCancel&quot;:&quot;false&quot;,&#xd;
        &quot;cancelTime&quot;:&quot;&quot;&#xd;
    },   &#xd;
    &quot;sign&quot;:&quot;${rbsign3}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;

//提取bzid和serialNumber
String response_data = prev.getResponseDataAsString(); 
JSONObject object = JSONObject.parseObject(response_data);
JSONObject data = object.getJSONObject(&quot;data&quot;);
String serialNumber = data.getString(&quot;serialNumber&quot;);
String bzId = data.getString(&quot;bzId&quot;);
vars.put(&quot;serialNumber&quot;,serialNumber);
vars.put(&quot;bzId&quot;,bzId);

//获取第二个sign
String rb_data3 =&quot;{\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;&quot;+bzId+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;serialNumber\&quot;:\&quot;&quot;+serialNumber+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;productName\&quot;:\&quot;sss\&quot;,\r\n&quot; + 
				&quot;        \&quot;benefitCode\&quot;:\&quot;geg\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpCode\&quot;:\&quot;bgbg\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpName\&quot;:\&quot;bhgtbh\&quot;,\r\n&quot; + 
				&quot;        \&quot;insuranceNo\&quot;:\&quot;gfrg\&quot;,\r\n&quot; + 
				&quot;        \&quot;premium\&quot;:\&quot;20.1\&quot;,\r\n&quot; + 
				&quot;        \&quot;insuranceStatus\&quot;:\&quot;grg\&quot;,\r\n&quot; + 
				&quot;        \&quot;idNumber\&quot;:\&quot;aaa\&quot;,\r\n&quot; + 
				&quot;        \&quot;insuranceTime\&quot;:\&quot;2015-01-01 11:11:11\&quot;,\r\n&quot; + 
				&quot;        \&quot;isCancel\&quot;:\&quot;false\&quot;,\r\n&quot; + 
				&quot;        \&quot;cancelTime\&quot;:\&quot;\&quot;\r\n&quot; + 
				&quot;    }&quot;;

String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;

String rbsign3 = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data3);
vars.put(&quot;rbsign3&quot;,rbsign3);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="人保测试-循环(前端调用)" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">60</stringProp>
        <stringProp name="ThreadGroup.delay">2</stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">mp.flins.com.cn</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取七牛token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/business/rb/getQiNiuToken</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取七牛token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">qiNiuToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.qiNiuToken</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取code" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">ccode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果拿到七牛token" enabled="true">
          <stringProp name="IfController.condition">${ccode}==&quot;0000&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${base64}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">upload-z2.qiniup.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/putb64/-1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">UpToken ${qiNiuToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="把图片转换成base64" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.image.util.*;

String code = ImageUtil.base64(&quot;D:/invalidImage/cp (1).jpg&quot;);
vars.put(&quot;base64&quot;,code);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取imageurl" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">imgUrl</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.key</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报告" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;imgUrl&quot;:&quot;${imgUrl}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/business/rb/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取code" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">code</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="提交报告成功" enabled="true">
          <stringProp name="IfController.condition">${code}==&quot;0000&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看结果" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;:&quot;${id}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/business/rb/query</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1019197760">&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="人保测试-前端(加入逻辑)" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">60</stringProp>
        <stringProp name="ThreadGroup.delay">2</stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.5.111</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取七牛token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/business/rb/getQiNiuToken</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取七牛token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">qiNiuToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.qiNiuToken</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取code" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">ccode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果拿到七牛token" enabled="true">
          <stringProp name="IfController.condition">${ccode}==&quot;0000&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${base64}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">upload-z2.qiniup.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/putb64/-1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">UpToken ${qiNiuToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="把图片转换成base64" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.image.util.*;

String code = ImageUtil.base64(&quot;D:/images/8.jpg&quot;);
vars.put(&quot;base64&quot;,code);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取imageurl" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">key</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.key</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报告" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;imgUrl&quot;:&quot;${key}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/business/rb/submit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取code" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">code</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="提交报告成功" enabled="false">
          <stringProp name="IfController.condition">${code}==&quot;0000&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看结果" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;:&quot;${id}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/business/rb/query</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1019197760">&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>false</time>
              <latency>false</latency>
              <timestamp>false</timestamp>
              <success>false</success>
              <label>false</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="人保-（预发环境）" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.flins.com.cn</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取七牛token" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;2QwLbOwoeMc66K0Dpqr9BrL9qbbpaYq6&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;getQiniuToken&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;requestTime&quot;:&quot;2019-10-09 12:12:12&quot;&#xd;
    },   &#xd;
    &quot;sign&quot;:&quot;${rbsign0}&quot;  &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取签名" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.flins.test.MD5WithRSAUtil1;

//获取第一个七牛sign
String qiniu_data = &quot;{\r\n&quot; + 
				&quot;        \&quot;requestTime\&quot;:\&quot;2019-10-09 12:12:12\&quot;\r\n&quot; + 
				&quot;    }&quot;;
String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJILL1HUdZOlZYLuKELI2IV3hrbkQK52TdYDOoPw+Ctx+GGFaaif9m08Hd7KGp+pqZqYEmTpJ2dnl20GmvWcxHsCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAkgsvUdR1k6Vlgu4oQsjYhXeGtuRArnZN1gM6g/D4K3H4YYVpqJ/2bTwd3soan6mpmpgSZOknZ2eXbQaa9ZzEewIDAQABAkArJGK2Ka0SEKoMI46BLBPKWaTSIlt5LjmQHyQKFgU5z97gOfWxB9uEKHIr5Q140Hgt+6GqMGODGCqnlvvT7ZwBAiEAyFUqrApMxB7HEDL8qcoH3xfUk7LdurmqMt8ajlZWSasCIQC6oCAOt1KbgnN9HHlS0dnYEl6UnzAOe93K9SWNHNLAcQIgOOlI+Brs+AIuVwHFGY8VcWFZuKPlrbg1C8KpzqnkVYUCIE1cmU1gYwcB0Zv4VLanNPWjz78uKf6nDC7Y5mMToq2RAiEAgDP4vocl+hzJ7mKmbRUwMinsufVW4AQVZh2SZvkos9U=&quot;;


String rbsign0 = MD5WithRSAUtil1.type_1(privateKey,pubKey,qiniu_data);
vars.put(&quot;rbsign0&quot;,rbsign0);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取七牛token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取key" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">key</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.key</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${base64}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">upload-z2.qiniup.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/putb64/-1/key/${key}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">UpToken ${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/octet-stream</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="把图片转换成base64" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.image.util.*;

String code = ImageUtil.base64(&quot;D:/images/76.jpg&quot;);
vars.put(&quot;base64&quot;,code);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取imageurl" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">imgUrl</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.key</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交图片" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;appId&quot;: &quot;2QwLbOwoeMc66K0Dpqr9BrL9qbbpaYq6&quot;,&#xd;
	&quot;appKey&quot;: &quot;key1&quot;,&#xd;
	&quot;apiCode&quot;: &quot;submitPic&quot;,&#xd;
	&quot;version&quot;: &quot;1.0&quot;,&#xd;
	&quot;data&quot;: {&#xd;
		&quot;imgUrl&quot;: &quot;${imgUrl}&quot;,&#xd;
		&quot;filename&quot;: &quot;TR0.jpg&quot;,&#xd;
		&quot;bzId&quot;: &quot;${bzId}&quot;,&#xd;
		&quot;guId&quot;: &quot;0002&quot;,&#xd;
		&quot;gender&quot;: 1,&#xd;
		&quot;channelCode&quot;: &quot;renbao&quot;,&#xd;
		&quot;channelName&quot;: &quot;人保&quot;,&#xd;
		&quot;benefitCode&quot;: &quot;dd222&quot;,&#xd;
		&quot;productName&quot;: &quot;666&quot;,&#xd;
		&quot;cpCode&quot;: &quot;6666&quot;,&#xd;
		&quot;cpName&quot;: &quot;5656&quot;,&#xd;
		&quot;planCode&quot;: &quot;3333&quot;,&#xd;
		&quot;cname&quot;:&quot;徐&quot;&#xd;
	},&#xd;
	&quot;sign&quot;: &quot;${rbsign}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取签名" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.util.All_util;
import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;
//获取随机数
String r = All_util.generateString(10);
String bzId = &quot;RB2019&quot; + r;
vars.put(&quot;bzId&quot;,bzId);

//提取imgUrl
String response_data = prev.getResponseDataAsString(); 
JSONObject object = JSONObject.parseObject(response_data);
//JSONObject data = object.getJSONObject(&quot;key&quot;);
String key = object.getString(&quot;key&quot;);
vars.put(&quot;key&quot;,key);

//获取第一个sign
String rb_data = &quot;{\r\n&quot; + 
				&quot;        \&quot;imgUrl\&quot;:\&quot;&quot;+key+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;filename\&quot;:\&quot;TR0.jpg\&quot;,\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;&quot;+bzId+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;guId\&quot;:\&quot;0002\&quot;,\r\n&quot; + 
				&quot;        \&quot;gender\&quot;:1,\r\n&quot; + 
				&quot;        \&quot;channelCode\&quot;:\&quot;renbao\&quot;,\r\n&quot; + 
				&quot;	   \&quot;channelName\&quot;:\&quot;人保\&quot;,\r\n&quot; + 
				&quot;        \&quot;benefitCode\&quot;:\&quot;dd222\&quot;,\r\n&quot; + 
				&quot;	   \&quot;productName\&quot;:\&quot;666\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpCode\&quot;:\&quot;6666\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpName\&quot;:\&quot;5656\&quot;,\r\n&quot; + 
				&quot;        \&quot;planCode\&quot;:\&quot;3333\&quot;,\r\n&quot; + 
				&quot;        \&quot;cname\&quot;:\&quot;徐\&quot;\r\n&quot; +
				&quot;    }&quot;;
String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJILL1HUdZOlZYLuKELI2IV3hrbkQK52TdYDOoPw+Ctx+GGFaaif9m08Hd7KGp+pqZqYEmTpJ2dnl20GmvWcxHsCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAkgsvUdR1k6Vlgu4oQsjYhXeGtuRArnZN1gM6g/D4K3H4YYVpqJ/2bTwd3soan6mpmpgSZOknZ2eXbQaa9ZzEewIDAQABAkArJGK2Ka0SEKoMI46BLBPKWaTSIlt5LjmQHyQKFgU5z97gOfWxB9uEKHIr5Q140Hgt+6GqMGODGCqnlvvT7ZwBAiEAyFUqrApMxB7HEDL8qcoH3xfUk7LdurmqMt8ajlZWSasCIQC6oCAOt1KbgnN9HHlS0dnYEl6UnzAOe93K9SWNHNLAcQIgOOlI+Brs+AIuVwHFGY8VcWFZuKPlrbg1C8KpzqnkVYUCIE1cmU1gYwcB0Zv4VLanNPWjz78uKf6nDC7Y5mMToq2RAiEAgDP4vocl+hzJ7mKmbRUwMinsufVW4AQVZh2SZvkos9U=&quot;;


String rbsign = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data);
vars.put(&quot;rbsign&quot;,rbsign);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取code" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">code</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取bzId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bzId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.bzId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="查询测评单" enabled="false">
          <stringProp name="IfController.condition">${code} == &quot;0000&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询测评单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;2QwLbOwoeMc66K0Dpqr9BrL9qbbpaYq6&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;evaluateInfo&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;bzId&quot;:&quot;${bzId}&quot;&#xd;
    },&#xd;
    &quot;sign&quot;:&quot;${rbsign2}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;

//提取bzid
String response_data = prev.getResponseDataAsString(); 
JSONObject object = JSONObject.parseObject(response_data);
JSONObject data = object.getJSONObject(&quot;data&quot;);
String bzId = data.getString(&quot;bzId&quot;);
vars.put(&quot;bzId&quot;,bzId);


//获取第二个sign
String rb_data2 =&quot;{\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;&quot;+bzId+&quot;\&quot;\r\n&quot; + 
				&quot;    }&quot;;

String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJILL1HUdZOlZYLuKELI2IV3hrbkQK52TdYDOoPw+Ctx+GGFaaif9m08Hd7KGp+pqZqYEmTpJ2dnl20GmvWcxHsCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAkgsvUdR1k6Vlgu4oQsjYhXeGtuRArnZN1gM6g/D4K3H4YYVpqJ/2bTwd3soan6mpmpgSZOknZ2eXbQaa9ZzEewIDAQABAkArJGK2Ka0SEKoMI46BLBPKWaTSIlt5LjmQHyQKFgU5z97gOfWxB9uEKHIr5Q140Hgt+6GqMGODGCqnlvvT7ZwBAiEAyFUqrApMxB7HEDL8qcoH3xfUk7LdurmqMt8ajlZWSasCIQC6oCAOt1KbgnN9HHlS0dnYEl6UnzAOe93K9SWNHNLAcQIgOOlI+Brs+AIuVwHFGY8VcWFZuKPlrbg1C8KpzqnkVYUCIE1cmU1gYwcB0Zv4VLanNPWjz78uKf6nDC7Y5mMToq2RAiEAgDP4vocl+hzJ7mKmbRUwMinsufVW4AQVZh2SZvkos9U=&quot;;

String rbsign2 = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data2);
vars.put(&quot;rbsign2&quot;,rbsign2);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="反馈承保数据" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;2QwLbOwoeMc66K0Dpqr9BrL9qbbpaYq6&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;feedbackInsurance&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;bzId&quot;:&quot;${bzId}&quot;,&#xd;
        &quot;serialNumber&quot;:&quot;${serialNumber}&quot;,&#xd;
        &quot;productName&quot;:&quot;sss&quot;,&#xd;
        &quot;benefitCode&quot;:&quot;geg&quot;,&#xd;
        &quot;cpCode&quot;:&quot;bgbg&quot;,&#xd;
        &quot;cpName&quot;:&quot;bhgtbh&quot;,&#xd;
        &quot;insuranceNo&quot;:&quot;gfrg&quot;,&#xd;
        &quot;premium&quot;:&quot;20.1&quot;,&#xd;
        &quot;insuranceStatus&quot;:&quot;grg&quot;,&#xd;
        &quot;idNumber&quot;:&quot;fefef&quot;&#xd;
    },   &#xd;
    &quot;sign&quot;:&quot;${rbsign3}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;

//提取bzid和serialNumber
//String response_data = prev.getResponseDataAsString(); 
//JSONObject object = JSONObject.parseObject(response_data);
//JSONObject data = object.getJSONObject(&quot;data&quot;);
//String serialNumber = data.getString(&quot;serialNumber&quot;);
//String bzId = data.getString(&quot;bzId&quot;);
//vars.put(&quot;serialNumber&quot;,serialNumber);
//vars.put(&quot;bzId&quot;,bzId);
String bzId = vars.get(&quot;bzId&quot;);

//获取第二个sign
String rb_data3 =&quot;{\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;&quot;+bzId+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;serialNumber\&quot;:\&quot;&quot;+serialNumber+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;productName\&quot;:\&quot;sss\&quot;,\r\n&quot; + 
				&quot;        \&quot;benefitCode\&quot;:\&quot;geg\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpCode\&quot;:\&quot;bgbg\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpName\&quot;:\&quot;bhgtbh\&quot;,\r\n&quot; + 
				&quot;        \&quot;insuranceNo\&quot;:\&quot;gfrg\&quot;,\r\n&quot; + 
				&quot;        \&quot;premium\&quot;:\&quot;20.1\&quot;,\r\n&quot; + 
				&quot;        \&quot;insuranceStatus\&quot;:\&quot;grg\&quot;,\r\n&quot; + 
				&quot;        \&quot;idNumber\&quot;:\&quot;fefef\&quot;\r\n&quot; + 
				&quot;    }&quot;;

String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJILL1HUdZOlZYLuKELI2IV3hrbkQK52TdYDOoPw+Ctx+GGFaaif9m08Hd7KGp+pqZqYEmTpJ2dnl20GmvWcxHsCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAkgsvUdR1k6Vlgu4oQsjYhXeGtuRArnZN1gM6g/D4K3H4YYVpqJ/2bTwd3soan6mpmpgSZOknZ2eXbQaa9ZzEewIDAQABAkArJGK2Ka0SEKoMI46BLBPKWaTSIlt5LjmQHyQKFgU5z97gOfWxB9uEKHIr5Q140Hgt+6GqMGODGCqnlvvT7ZwBAiEAyFUqrApMxB7HEDL8qcoH3xfUk7LdurmqMt8ajlZWSasCIQC6oCAOt1KbgnN9HHlS0dnYEl6UnzAOe93K9SWNHNLAcQIgOOlI+Brs+AIuVwHFGY8VcWFZuKPlrbg1C8KpzqnkVYUCIE1cmU1gYwcB0Zv4VLanNPWjz78uKf6nDC7Y5mMToq2RAiEAgDP4vocl+hzJ7mKmbRUwMinsufVW4AQVZh2SZvkos9U=&quot;;

String rbsign3 = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data3);
vars.put(&quot;rbsign3&quot;,rbsign3);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="人保-测试环境-回调" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">mp.flins.com.cn</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取七牛token" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;getQiniuToken&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
       &quot;requestTime&quot;:&quot;2019-08-16 12:12:12&quot;&#xd;
    },   &#xd;
    &quot;sign&quot;:&quot;${rbsign0}&quot;&#xd;
    &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取签名" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.flins.test.MD5WithRSAUtil1;

//获取第一个七牛sign
String qiniu_data = &quot;{\r\n&quot; + 
				&quot;        \&quot;requestTime\&quot;:\&quot;2019-08-16 12:12:12\&quot;\r\n&quot; + 
				&quot;    }&quot;;
String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;


String rbsign0 = MD5WithRSAUtil1.type_1(privateKey,pubKey,qiniu_data);
vars.put(&quot;rbsign0&quot;,rbsign0);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取七牛token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取key" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">keys</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.key</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${base64}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">upload-z2.qiniup.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/putb64/-1/key/${keys}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">UpToken ${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/octet-stream</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="把图片转换成base64" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.image.util.*;

String code = ImageUtil.base64(&quot;D:/images/76.jpg&quot;);
vars.put(&quot;base64&quot;,code);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取imageurl" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">imgUrl</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.key</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交图片" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
	&quot;appKey&quot;: &quot;key1&quot;,&#xd;
	&quot;apiCode&quot;: &quot;submitPic&quot;,&#xd;
	&quot;version&quot;: &quot;1.0&quot;,&#xd;
	&quot;data&quot;: {&#xd;
		&quot;imgUrl&quot;: &quot;RB20191113-11:38:45000173&quot;,&#xd;
		&quot;filename&quot;: &quot;TR0.jpg&quot;,&#xd;
		&quot;bzId&quot;: &quot;${bzId}&quot;,&#xd;
		&quot;guId&quot;: &quot;0002&quot;,&#xd;
		&quot;gender&quot;: &quot;1&quot;,&#xd;
		&quot;channelCode&quot;: &quot;renbao&quot;,&#xd;
		&quot;channelName&quot;: &quot;人保&quot;,&#xd;
		&quot;benefitCode&quot;: &quot;dd222&quot;,&#xd;
		&quot;productName&quot;: &quot;666&quot;,&#xd;
		&quot;cpCode&quot;: &quot;6666&quot;,&#xd;
		&quot;cpName&quot;: &quot;5656&quot;,&#xd;
		&quot;planCode&quot;:&quot;3333&quot;,&#xd;
		&quot;cname&quot;:&quot;徐&quot;&#xd;
	},&#xd;
	&quot;sign&quot;: &quot;${rbsign}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取签名" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.util.All_util;
import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;
//获取随机数
String r = All_util.generateString(10);
String bzId = &quot;RB2019&quot; + r;
vars.put(&quot;bzId&quot;,bzId);

//提取imgUrl
String response_data = prev.getResponseDataAsString(); 
JSONObject object = JSONObject.parseObject(response_data);
//JSONObject data = object.getJSONObject(&quot;key&quot;);
String imgUrl = object.getString(&quot;key&quot;);
vars.put(&quot;imgUrl&quot;,imgUrl);
log.info(imgUrl);

//获取第一个sign
String rb_data = &quot;{\r\n&quot; + 
				&quot;		\&quot;imgUrl\&quot;: \&quot;${imgUrl}\&quot;,\r\n&quot; + 
				&quot;		\&quot;filename\&quot;: \&quot;TR0.jpg\&quot;,\r\n&quot; + 
				&quot;		\&quot;bzId\&quot;: \&quot;${bzId}\&quot;,\r\n&quot; + 
				&quot;		\&quot;guId\&quot;: \&quot;0002\&quot;,\r\n&quot; + 
				&quot;		\&quot;gender\&quot;: \&quot;1\&quot;,\r\n&quot; + 
				&quot;		\&quot;channelCode\&quot;: \&quot;renbao\&quot;,\r\n&quot; + 
				&quot;		\&quot;channelName\&quot;: \&quot;人保\&quot;,\r\n&quot; + 
				&quot;		\&quot;benefitCode\&quot;: \&quot;dd222\&quot;,\r\n&quot; + 
				&quot;		\&quot;productName\&quot;: \&quot;666\&quot;,\r\n&quot; + 
				&quot;		\&quot;cpCode\&quot;: \&quot;6666\&quot;,\r\n&quot; + 
				&quot;		\&quot;cpName\&quot;: \&quot;5656\&quot;,\r\n&quot; + 
				&quot;		\&quot;planCode\&quot;:\&quot;3333\&quot;,\r\n&quot; + 
				&quot;		\&quot;cname\&quot;:\&quot;赵月月123\&quot;\r\n&quot; + 
				&quot;	}&quot;;
String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;


String rbsign = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data);
vars.put(&quot;rbsign&quot;,rbsign);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="code" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">code</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否提交成功" enabled="false">
          <stringProp name="IfController.condition">${code} == 0000</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询测评单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;evaluateInfo&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;bzId&quot;:&quot;${bzId}&quot;&#xd;
    },&#xd;
    &quot;sign&quot;:&quot;${rbsign2}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;

//提取bzid
//String response_data = prev.getResponseDataAsString(); 
//JSONObject object = JSONObject.parseObject(response_data);
//JSONObject data = object.getJSONObject(&quot;data&quot;);
//String bzId = data.getString(&quot;bzId&quot;);
//vars.put(&quot;bzId&quot;,bzId);
String bzId = vars.get(&quot;bzId&quot;);


//获取第二个sign
String rb_data2 =&quot;{\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;&quot;+bzId+&quot;\&quot;\r\n&quot; + 
				&quot;    }&quot;;

String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;

String rbsign2 = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data2);
vars.put(&quot;rbsign2&quot;,rbsign2);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取code" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">result</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="循环查询结果" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断是否查到结果" enabled="true">
              <stringProp name="IfController.condition">${result} != 0000</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="间隔0.5秒" enabled="true">
                <stringProp name="ConstantTimer.delay">500</stringProp>
              </ConstantTimer>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询测评单" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;evaluateInfo&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;bzId&quot;:&quot;${bzId}&quot;&#xd;
    },&#xd;
    &quot;sign&quot;:&quot;${rbsign2}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;

//提取bzid
//String response_data = prev.getResponseDataAsString(); 
//JSONObject object = JSONObject.parseObject(response_data);
//JSONObject data = object.getJSONObject(&quot;data&quot;);
//String bzId = data.getString(&quot;bzId&quot;);
//vars.put(&quot;bzId&quot;,bzId);
String bzId = vars.get(&quot;bzId&quot;);


//获取第二个sign
String rb_data2 =&quot;{\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;&quot;+bzId+&quot;\&quot;\r\n&quot; + 
				&quot;    }&quot;;

String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;

String rbsign2 = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data2);
vars.put(&quot;rbsign2&quot;,rbsign2);
</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取code" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">result</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="反馈承保数据" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;feedbackInsurance&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;bzId&quot;:&quot;${bzId}&quot;,&#xd;
        &quot;serialNumber&quot;:&quot;${serialNumber}&quot;,&#xd;
        &quot;productName&quot;:&quot;sss&quot;,&#xd;
        &quot;benefitCode&quot;:&quot;geg&quot;,&#xd;
        &quot;cpCode&quot;:&quot;bgbg&quot;,&#xd;
        &quot;cpName&quot;:&quot;bhgtbh&quot;,&#xd;
        &quot;insuranceNo&quot;:&quot;gfrg&quot;,&#xd;
        &quot;premium&quot;:&quot;20.1&quot;,&#xd;
        &quot;insuranceStatus&quot;:&quot;grg&quot;,&#xd;
        &quot;idNumber&quot;:&quot;aaa&quot;,&#xd;
        &quot;insuranceTime&quot;:&quot;2015-01-01 11:11:11&quot;,&#xd;
        &quot;isCancel&quot;:&quot;false&quot;,&#xd;
        &quot;cancelTime&quot;:&quot;&quot;&#xd;
    },   &#xd;
    &quot;sign&quot;:&quot;${rbsign3}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;

//提取bzid和serialNumber
String response_data = prev.getResponseDataAsString(); 
JSONObject object = JSONObject.parseObject(response_data);
JSONObject data = object.getJSONObject(&quot;data&quot;);
String serialNumber = data.getString(&quot;serialNumber&quot;);
String bzId = data.getString(&quot;bzId&quot;);
vars.put(&quot;serialNumber&quot;,serialNumber);
vars.put(&quot;bzId&quot;,bzId);

//获取第二个sign
String rb_data3 =&quot;{\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;&quot;+bzId+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;serialNumber\&quot;:\&quot;&quot;+serialNumber+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;productName\&quot;:\&quot;sss\&quot;,\r\n&quot; + 
				&quot;        \&quot;benefitCode\&quot;:\&quot;geg\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpCode\&quot;:\&quot;bgbg\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpName\&quot;:\&quot;bhgtbh\&quot;,\r\n&quot; + 
				&quot;        \&quot;insuranceNo\&quot;:\&quot;gfrg\&quot;,\r\n&quot; + 
				&quot;        \&quot;premium\&quot;:\&quot;20.1\&quot;,\r\n&quot; + 
				&quot;        \&quot;insuranceStatus\&quot;:\&quot;grg\&quot;,\r\n&quot; + 
				&quot;        \&quot;idNumber\&quot;:\&quot;aaa\&quot;,\r\n&quot; + 
				&quot;        \&quot;insuranceTime\&quot;:\&quot;2015-01-01 11:11:11\&quot;,\r\n&quot; + 
				&quot;        \&quot;isCancel\&quot;:\&quot;false\&quot;,\r\n&quot; + 
				&quot;        \&quot;cancelTime\&quot;:\&quot;\&quot;\r\n&quot; + 
				&quot;    }&quot;;

String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;

String rbsign3 = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data3);
vars.put(&quot;rbsign3&quot;,rbsign3);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="B端-(预发环境)-固定key" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="key" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:\Users\Cathy\Desktop\key.txt</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">imgUrl</stringProp>
        </CSVDataSet>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.flins.com.cn</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取七牛token" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;getQiniuToken&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;requestTime&quot;:&quot;2019-10-09 12:12:12&quot;&#xd;
    },   &#xd;
    &quot;sign&quot;:&quot;${rbsign0}&quot;  &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取签名" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.flins.test.MD5WithRSAUtil1;

//获取第一个七牛sign
String qiniu_data = &quot;{\r\n&quot; + 
				&quot;        \&quot;requestTime\&quot;:\&quot;2019-10-09 12:12:12\&quot;\r\n&quot; + 
				&quot;    }&quot;;
String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;


String rbsign0 = MD5WithRSAUtil1.type_1(privateKey,pubKey,qiniu_data);
vars.put(&quot;rbsign0&quot;,rbsign0);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取七牛token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取key" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">key</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.key</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${base64}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">upload-z2.qiniup.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/putb64/-1/key/${key}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">UpToken ${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/octet-stream</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="把图片转换成base64" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.image.util.*;

String code = ImageUtil.base64(&quot;D:/images/76.jpg&quot;);
vars.put(&quot;base64&quot;,code);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取imageurl" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">imgUrl</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.key</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交图片" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
	&quot;appKey&quot;: &quot;key1&quot;,&#xd;
	&quot;apiCode&quot;: &quot;submitPic&quot;,&#xd;
	&quot;version&quot;: &quot;1.0&quot;,&#xd;
	&quot;data&quot;: {&#xd;
		&quot;imgUrl&quot;: &quot;${imgUrl}&quot;,&#xd;
		&quot;filename&quot;: &quot;TR0.jpg&quot;,&#xd;
		&quot;bzId&quot;: &quot;${bzId}&quot;,&#xd;
		&quot;guId&quot;: &quot;0002&quot;,&#xd;
		&quot;gender&quot;: 1,&#xd;
		&quot;channelCode&quot;: &quot;renbao&quot;,&#xd;
		&quot;channelName&quot;: &quot;人保&quot;,&#xd;
		&quot;benefitCode&quot;: &quot;dd222&quot;,&#xd;
		&quot;productName&quot;: &quot;666&quot;,&#xd;
		&quot;cpCode&quot;: &quot;6666&quot;,&#xd;
		&quot;cpName&quot;: &quot;5656&quot;,&#xd;
		&quot;planCode&quot;: &quot;3333&quot;,&#xd;
		&quot;cname&quot;:&quot;徐&quot;&#xd;
	},&#xd;
	&quot;sign&quot;: &quot;${rbsign}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取签名" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.util.All_util;
import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;
//获取随机数
String r = All_util.generateString(10);
String bzId = &quot;RB2019&quot; + r;
vars.put(&quot;bzId&quot;,bzId);

//提取imgUrl
//String response_data = prev.getResponseDataAsString(); 
//JSONObject object = JSONObject.parseObject(response_data);
////JSONObject data = object.getJSONObject(&quot;key&quot;);
//String key = object.getString(&quot;key&quot;);
//vars.put(&quot;key&quot;,key);
String key = vars.get(&quot;imgUrl&quot;);
log.info(key);

//获取第一个sign
String rb_data = &quot;{\r\n&quot; + 
				&quot;        \&quot;imgUrl\&quot;:\&quot;&quot;+key+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;filename\&quot;:\&quot;TR0.jpg\&quot;,\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;&quot;+bzId+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;guId\&quot;:\&quot;0002\&quot;,\r\n&quot; + 
				&quot;        \&quot;gender\&quot;:1,\r\n&quot; + 
				&quot;        \&quot;channelCode\&quot;:\&quot;renbao\&quot;,\r\n&quot; + 
				&quot;	   \&quot;channelName\&quot;:\&quot;人保\&quot;,\r\n&quot; + 
				&quot;        \&quot;benefitCode\&quot;:\&quot;dd222\&quot;,\r\n&quot; + 
				&quot;	   \&quot;productName\&quot;:\&quot;666\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpCode\&quot;:\&quot;6666\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpName\&quot;:\&quot;5656\&quot;,\r\n&quot; + 
				&quot;        \&quot;planCode\&quot;:\&quot;3333\&quot;,\r\n&quot; + 
				&quot;        \&quot;cname\&quot;:\&quot;徐\&quot;\r\n&quot; +
				&quot;    }&quot;;
String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;


String rbsign = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data);
vars.put(&quot;rbsign&quot;,rbsign);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取code" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">code</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取bzId" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">bzId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.bzId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="查询测评单" enabled="false">
          <stringProp name="IfController.condition">${code} == &quot;0000&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询测评单" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;evaluateInfo&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;bzId&quot;:&quot;${bzId}&quot;&#xd;
    },&#xd;
    &quot;sign&quot;:&quot;${rbsign2}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;

//提取bzid
String response_data = prev.getResponseDataAsString(); 
JSONObject object = JSONObject.parseObject(response_data);
JSONObject data = object.getJSONObject(&quot;data&quot;);
String bzId = data.getString(&quot;bzId&quot;);
vars.put(&quot;bzId&quot;,bzId);


//获取第二个sign
String rb_data2 =&quot;{\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;&quot;+bzId+&quot;\&quot;\r\n&quot; + 
				&quot;    }&quot;;

String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;

String rbsign2 = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data2);
vars.put(&quot;rbsign2&quot;,rbsign2);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="反馈承保数据" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;feedbackInsurance&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;bzId&quot;:&quot;${bzId}&quot;,&#xd;
        &quot;serialNumber&quot;:&quot;${serialNumber}&quot;,&#xd;
        &quot;productName&quot;:&quot;sss&quot;,&#xd;
        &quot;benefitCode&quot;:&quot;geg&quot;,&#xd;
        &quot;cpCode&quot;:&quot;bgbg&quot;,&#xd;
        &quot;cpName&quot;:&quot;bhgtbh&quot;,&#xd;
        &quot;insuranceNo&quot;:&quot;gfrg&quot;,&#xd;
        &quot;premium&quot;:&quot;20.1&quot;,&#xd;
        &quot;insuranceStatus&quot;:&quot;grg&quot;,&#xd;
        &quot;idNumber&quot;:&quot;fefef&quot;&#xd;
    },   &#xd;
    &quot;sign&quot;:&quot;${rbsign3}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;

//提取bzid和serialNumber
//String response_data = prev.getResponseDataAsString(); 
//JSONObject object = JSONObject.parseObject(response_data);
//JSONObject data = object.getJSONObject(&quot;data&quot;);
//String serialNumber = data.getString(&quot;serialNumber&quot;);
//String bzId = data.getString(&quot;bzId&quot;);
//vars.put(&quot;serialNumber&quot;,serialNumber);
//vars.put(&quot;bzId&quot;,bzId);
String bzId = vars.get(&quot;bzId&quot;);

//获取第二个sign
String rb_data3 =&quot;{\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;&quot;+bzId+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;serialNumber\&quot;:\&quot;&quot;+serialNumber+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;productName\&quot;:\&quot;sss\&quot;,\r\n&quot; + 
				&quot;        \&quot;benefitCode\&quot;:\&quot;geg\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpCode\&quot;:\&quot;bgbg\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpName\&quot;:\&quot;bhgtbh\&quot;,\r\n&quot; + 
				&quot;        \&quot;insuranceNo\&quot;:\&quot;gfrg\&quot;,\r\n&quot; + 
				&quot;        \&quot;premium\&quot;:\&quot;20.1\&quot;,\r\n&quot; + 
				&quot;        \&quot;insuranceStatus\&quot;:\&quot;grg\&quot;,\r\n&quot; + 
				&quot;        \&quot;idNumber\&quot;:\&quot;fefef\&quot;\r\n&quot; + 
				&quot;    }&quot;;

String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;

String rbsign3 = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data3);
vars.put(&quot;rbsign3&quot;,rbsign3);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="B端-(预发环境)-指定图片" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">api.flins.com.cn</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取七牛token" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;getQiniuToken&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;requestTime&quot;:&quot;2019-10-09 12:12:12&quot;&#xd;
    },   &#xd;
    &quot;sign&quot;:&quot;${rbsign0}&quot;  &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取签名" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.flins.test.MD5WithRSAUtil1;

//获取第一个七牛sign
String qiniu_data = &quot;{\r\n&quot; + 
				&quot;        \&quot;requestTime\&quot;:\&quot;2019-10-09 12:12:12\&quot;\r\n&quot; + 
				&quot;    }&quot;;
String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;


String rbsign0 = MD5WithRSAUtil1.type_1(privateKey,pubKey,qiniu_data);
vars.put(&quot;rbsign0&quot;,rbsign0);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取七牛token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取key" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">key</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.key</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${base64}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">upload-z2.qiniup.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/putb64/-1/key/${key}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">UpToken ${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/octet-stream</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="把图片转换成base64" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.image.util.*;

String code = ImageUtil.base64(&quot;D:/images/TR0.jpg&quot;);
vars.put(&quot;base64&quot;,code);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取imageurl" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">imgUrl</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.key</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交图片" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
	&quot;appKey&quot;: &quot;key1&quot;,&#xd;
	&quot;apiCode&quot;: &quot;submitPic&quot;,&#xd;
	&quot;version&quot;: &quot;1.0&quot;,&#xd;
	&quot;data&quot;: {&#xd;
		&quot;imgUrl&quot;: &quot;${imgUrl}&quot;,&#xd;
		&quot;filename&quot;: &quot;TR0.jpg&quot;,&#xd;
		&quot;bzId&quot;: &quot;${bzId}&quot;,&#xd;
		&quot;guId&quot;: &quot;0002&quot;,&#xd;
		&quot;gender&quot;: 1,&#xd;
		&quot;channelCode&quot;: &quot;renbao&quot;,&#xd;
		&quot;channelName&quot;: &quot;人保&quot;,&#xd;
		&quot;benefitCode&quot;: &quot;dd222&quot;,&#xd;
		&quot;productName&quot;: &quot;666&quot;,&#xd;
		&quot;cpCode&quot;: &quot;6666&quot;,&#xd;
		&quot;cpName&quot;: &quot;5656&quot;,&#xd;
		&quot;planCode&quot;: &quot;3333&quot;,&#xd;
		&quot;cname&quot;:&quot;徐&quot;&#xd;
	},&#xd;
	&quot;sign&quot;: &quot;${rbsign}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取签名" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.util.All_util;
import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;
//获取随机数
String r = All_util.generateString(10);
String bzId = &quot;RB2019&quot; + r;
vars.put(&quot;bzId&quot;,bzId);

//提取imgUrl
//String response_data = prev.getResponseDataAsString(); 
//JSONObject object = JSONObject.parseObject(response_data);
////JSONObject data = object.getJSONObject(&quot;key&quot;);
//String key = object.getString(&quot;key&quot;);
//vars.put(&quot;key&quot;,key);
String key = vars.get(&quot;imgUrl&quot;);
log.info(key);

//获取第一个sign
String rb_data = &quot;{\r\n&quot; + 
				&quot;        \&quot;imgUrl\&quot;:\&quot;&quot;+key+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;filename\&quot;:\&quot;TR0.jpg\&quot;,\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;&quot;+bzId+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;guId\&quot;:\&quot;0002\&quot;,\r\n&quot; + 
				&quot;        \&quot;gender\&quot;:1,\r\n&quot; + 
				&quot;        \&quot;channelCode\&quot;:\&quot;renbao\&quot;,\r\n&quot; + 
				&quot;	   \&quot;channelName\&quot;:\&quot;人保\&quot;,\r\n&quot; + 
				&quot;        \&quot;benefitCode\&quot;:\&quot;dd222\&quot;,\r\n&quot; + 
				&quot;	   \&quot;productName\&quot;:\&quot;666\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpCode\&quot;:\&quot;6666\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpName\&quot;:\&quot;5656\&quot;,\r\n&quot; + 
				&quot;        \&quot;planCode\&quot;:\&quot;3333\&quot;,\r\n&quot; + 
				&quot;        \&quot;cname\&quot;:\&quot;徐\&quot;\r\n&quot; +
				&quot;    }&quot;;
String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;


String rbsign = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data);
vars.put(&quot;rbsign&quot;,rbsign);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取code" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">code</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取bzId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">bzId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.bzId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询测评单" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;evaluateInfo&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;bzId&quot;:&quot;RB2019y8LTUz7VAR&quot;&#xd;
    },&#xd;
    &quot;sign&quot;:&quot;${rbsign2}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;

//提取bzid
String response_data = prev.getResponseDataAsString(); 
JSONObject object = JSONObject.parseObject(response_data);
JSONObject data = object.getJSONObject(&quot;data&quot;);
String bzId = data.getString(&quot;bzId&quot;);
vars.put(&quot;bzId&quot;,bzId);


//获取第二个sign
String rb_data2 =&quot;{\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;RB2019y8LTUz7VAR\&quot;\r\n&quot; + 
				&quot;    }&quot;;

String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;

String rbsign2 = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data2);
vars.put(&quot;rbsign2&quot;,rbsign2);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="查询测评单" enabled="false">
          <stringProp name="IfController.condition">${code} == &quot;0000&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="反馈承保数据" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;feedbackInsurance&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;bzId&quot;:&quot;${bzId}&quot;,&#xd;
        &quot;serialNumber&quot;:&quot;${serialNumber}&quot;,&#xd;
        &quot;productName&quot;:&quot;sss&quot;,&#xd;
        &quot;benefitCode&quot;:&quot;geg&quot;,&#xd;
        &quot;cpCode&quot;:&quot;bgbg&quot;,&#xd;
        &quot;cpName&quot;:&quot;bhgtbh&quot;,&#xd;
        &quot;insuranceNo&quot;:&quot;gfrg&quot;,&#xd;
        &quot;premium&quot;:&quot;20.1&quot;,&#xd;
        &quot;insuranceStatus&quot;:&quot;grg&quot;,&#xd;
        &quot;idNumber&quot;:&quot;fefef&quot;&#xd;
    },   &#xd;
    &quot;sign&quot;:&quot;${rbsign3}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;

//提取bzid和serialNumber
//String response_data = prev.getResponseDataAsString(); 
//JSONObject object = JSONObject.parseObject(response_data);
//JSONObject data = object.getJSONObject(&quot;data&quot;);
//String serialNumber = data.getString(&quot;serialNumber&quot;);
//String bzId = data.getString(&quot;bzId&quot;);
//vars.put(&quot;serialNumber&quot;,serialNumber);
//vars.put(&quot;bzId&quot;,bzId);
String bzId = vars.get(&quot;bzId&quot;);

//获取第二个sign
String rb_data3 =&quot;{\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;&quot;+bzId+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;serialNumber\&quot;:\&quot;&quot;+serialNumber+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;productName\&quot;:\&quot;sss\&quot;,\r\n&quot; + 
				&quot;        \&quot;benefitCode\&quot;:\&quot;geg\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpCode\&quot;:\&quot;bgbg\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpName\&quot;:\&quot;bhgtbh\&quot;,\r\n&quot; + 
				&quot;        \&quot;insuranceNo\&quot;:\&quot;gfrg\&quot;,\r\n&quot; + 
				&quot;        \&quot;premium\&quot;:\&quot;20.1\&quot;,\r\n&quot; + 
				&quot;        \&quot;insuranceStatus\&quot;:\&quot;grg\&quot;,\r\n&quot; + 
				&quot;        \&quot;idNumber\&quot;:\&quot;fefef\&quot;\r\n&quot; + 
				&quot;    }&quot;;

String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;

String rbsign3 = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data3);
vars.put(&quot;rbsign3&quot;,rbsign3);</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="好医保-测试环境" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">mp.flins.com.cn</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取七牛token" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;eka26sc1FlfZT7SpGppUxiArihXoJPb47A&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;getQiniuToken&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
       &quot;requestTime&quot;:&quot;2019-08-16 12:12:12&quot;&#xd;
    },   &#xd;
    &quot;sign&quot;:&quot;${rbsign0}&quot;&#xd;
    &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取签名" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.flins.test.MD5WithRSAUtil1;

//获取第一个七牛sign
String qiniu_data = &quot;{\r\n&quot; + 
				&quot;        \&quot;requestTime\&quot;:\&quot;2019-08-16 12:12:12\&quot;\r\n&quot; + 
				&quot;    }&quot;;
String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;


String rbsign0 = MD5WithRSAUtil1.type_1(privateKey,pubKey,qiniu_data);
vars.put(&quot;rbsign0&quot;,rbsign0);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取七牛token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取key" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">keys</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.key</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${base64}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">upload-z2.qiniup.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/putb64/-1/key/${keys}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">UpToken ${token}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/octet-stream</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="把图片转换成base64" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.image.util.*;

String code = ImageUtil.base64(&quot;D:/images/444.jpg&quot;);
vars.put(&quot;base64&quot;,code);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取imageurl" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">imgUrl</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.key</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交图片" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;appId&quot;: &quot;eka26sc1FlfZT7SpGppUxiArihXoJPb47A&quot;,&#xd;
	&quot;appKey&quot;: &quot;key1&quot;,&#xd;
	&quot;apiCode&quot;: &quot;submitPic&quot;,&#xd;
	&quot;version&quot;: &quot;1.0&quot;,&#xd;
	&quot;data&quot;: {&#xd;
		&quot;imgUrl&quot;: &quot;RB20191113-11:38:45000173&quot;,&#xd;
		&quot;filename&quot;: &quot;TR0.jpg&quot;,&#xd;
		&quot;bzId&quot;: &quot;${bzId}&quot;,&#xd;
		&quot;guId&quot;: &quot;0002&quot;,&#xd;
		&quot;gender&quot;: &quot;1&quot;,&#xd;
		&quot;channelCode&quot;: &quot;renbao&quot;,&#xd;
		&quot;channelName&quot;: &quot;人保&quot;,&#xd;
		&quot;benefitCode&quot;: &quot;dd222&quot;,&#xd;
		&quot;productName&quot;: &quot;666&quot;,&#xd;
		&quot;cpCode&quot;: &quot;6666&quot;,&#xd;
		&quot;cpName&quot;: &quot;5656&quot;,&#xd;
		&quot;planCode&quot;:&quot;3333&quot;,&#xd;
		&quot;cname&quot;:&quot;徐&quot;&#xd;
	},&#xd;
	&quot;sign&quot;: &quot;${rbsign}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="获取签名" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.util.All_util;
import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;
//获取随机数
String r = All_util.generateString(10);
String bzId = &quot;RB2019&quot; + r;
vars.put(&quot;bzId&quot;,bzId);

//提取imgUrl
String response_data = prev.getResponseDataAsString(); 
JSONObject object = JSONObject.parseObject(response_data);
//JSONObject data = object.getJSONObject(&quot;key&quot;);
String imgUrl = object.getString(&quot;key&quot;);
vars.put(&quot;imgUrl&quot;,imgUrl);
log.info(imgUrl);

//获取第一个sign
String rb_data = &quot;{\r\n&quot; + 
				&quot;		\&quot;imgUrl\&quot;: \&quot;${imgUrl}\&quot;,\r\n&quot; + 
				&quot;		\&quot;filename\&quot;: \&quot;TR0.jpg\&quot;,\r\n&quot; + 
				&quot;		\&quot;bzId\&quot;: \&quot;${bzId}\&quot;,\r\n&quot; + 
				&quot;		\&quot;guId\&quot;: \&quot;0002\&quot;,\r\n&quot; + 
				&quot;		\&quot;gender\&quot;: \&quot;1\&quot;,\r\n&quot; + 
				&quot;		\&quot;channelCode\&quot;: \&quot;renbao\&quot;,\r\n&quot; + 
				&quot;		\&quot;channelName\&quot;: \&quot;人保\&quot;,\r\n&quot; + 
				&quot;		\&quot;benefitCode\&quot;: \&quot;dd222\&quot;,\r\n&quot; + 
				&quot;		\&quot;productName\&quot;: \&quot;666\&quot;,\r\n&quot; + 
				&quot;		\&quot;cpCode\&quot;: \&quot;6666\&quot;,\r\n&quot; + 
				&quot;		\&quot;cpName\&quot;: \&quot;5656\&quot;,\r\n&quot; + 
				&quot;		\&quot;planCode\&quot;:\&quot;3333\&quot;,\r\n&quot; + 
				&quot;		\&quot;cname\&quot;:\&quot;赵月月123\&quot;\r\n&quot; + 
				&quot;	}&quot;;
String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;


String rbsign = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data);
vars.put(&quot;rbsign&quot;,rbsign);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询测评单" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;evaluateInfo&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;bzId&quot;:&quot;${bzId}&quot;&#xd;
    },&#xd;
    &quot;sign&quot;:&quot;${rbsign2}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;

//提取bzid
String response_data = prev.getResponseDataAsString(); 
JSONObject object = JSONObject.parseObject(response_data);
JSONObject data = object.getJSONObject(&quot;data&quot;);
String bzId = data.getString(&quot;bzId&quot;);
vars.put(&quot;bzId&quot;,bzId);


//获取第二个sign
String rb_data2 =&quot;{\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;&quot;+bzId+&quot;\&quot;\r\n&quot; + 
				&quot;    }&quot;;

String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;

String rbsign2 = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data2);
vars.put(&quot;rbsign2&quot;,rbsign2);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="反馈承保数据" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;appId&quot;: &quot;czvlVxrYmroNb6efCqiVMuPpj9bSebaq&quot;,&#xd;
    &quot;appKey&quot;: &quot;key1&quot;,&#xd;
    &quot;apiCode&quot;: &quot;feedbackInsurance&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;data&quot;: {&#xd;
        &quot;bzId&quot;:&quot;${bzId}&quot;,&#xd;
        &quot;serialNumber&quot;:&quot;${serialNumber}&quot;,&#xd;
        &quot;productName&quot;:&quot;sss&quot;,&#xd;
        &quot;benefitCode&quot;:&quot;geg&quot;,&#xd;
        &quot;cpCode&quot;:&quot;bgbg&quot;,&#xd;
        &quot;cpName&quot;:&quot;bhgtbh&quot;,&#xd;
        &quot;insuranceNo&quot;:&quot;gfrg&quot;,&#xd;
        &quot;premium&quot;:&quot;20.1&quot;,&#xd;
        &quot;insuranceStatus&quot;:&quot;grg&quot;,&#xd;
        &quot;idNumber&quot;:&quot;aaa&quot;,&#xd;
        &quot;insuranceTime&quot;:&quot;2015-01-01 11:11:11&quot;,&#xd;
        &quot;isCancel&quot;:&quot;false&quot;,&#xd;
        &quot;cancelTime&quot;:&quot;&quot;&#xd;
    },   &#xd;
    &quot;sign&quot;:&quot;${rbsign3}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/api/dispatch</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.alibaba.fastjson.JSONObject;
import com.flins.test.MD5WithRSAUtil1;

//提取bzid和serialNumber
String response_data = prev.getResponseDataAsString(); 
JSONObject object = JSONObject.parseObject(response_data);
JSONObject data = object.getJSONObject(&quot;data&quot;);
String serialNumber = data.getString(&quot;serialNumber&quot;);
String bzId = data.getString(&quot;bzId&quot;);
vars.put(&quot;serialNumber&quot;,serialNumber);
vars.put(&quot;bzId&quot;,bzId);

//获取第二个sign
String rb_data3 =&quot;{\r\n&quot; + 
				&quot;        \&quot;bzId\&quot;:\&quot;&quot;+bzId+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;serialNumber\&quot;:\&quot;&quot;+serialNumber+&quot;\&quot;,\r\n&quot; + 
				&quot;        \&quot;productName\&quot;:\&quot;sss\&quot;,\r\n&quot; + 
				&quot;        \&quot;benefitCode\&quot;:\&quot;geg\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpCode\&quot;:\&quot;bgbg\&quot;,\r\n&quot; + 
				&quot;        \&quot;cpName\&quot;:\&quot;bhgtbh\&quot;,\r\n&quot; + 
				&quot;        \&quot;insuranceNo\&quot;:\&quot;gfrg\&quot;,\r\n&quot; + 
				&quot;        \&quot;premium\&quot;:\&quot;20.1\&quot;,\r\n&quot; + 
				&quot;        \&quot;insuranceStatus\&quot;:\&quot;grg\&quot;,\r\n&quot; + 
				&quot;        \&quot;idNumber\&quot;:\&quot;aaa\&quot;,\r\n&quot; + 
				&quot;        \&quot;insuranceTime\&quot;:\&quot;2015-01-01 11:11:11\&quot;,\r\n&quot; + 
				&quot;        \&quot;isCancel\&quot;:\&quot;false\&quot;,\r\n&quot; + 
				&quot;        \&quot;cancelTime\&quot;:\&quot;\&quot;\r\n&quot; + 
				&quot;    }&quot;;

String pubKey = &quot;MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAJKlg03vo0rU2/yNtxJilQzI8nrNA+DUN3uqAW4QKAXFZMMpbLI+TYpeKtmHhOe7I+NJB9UMxDUj3Mf3ukpDiEcCAwEAAQ==&quot;;
String privateKey = &quot;MIIBVgIBADANBgkqhkiG9w0BAQEFAASCAUAwggE8AgEAAkEAkqWDTe+jStTb/I23EmKVDMjyes0D4NQ3e6oBbhAoBcVkwylssj5Nil4q2YeE57sj40kH1QzENSPcx/e6SkOIRwIDAQABAkAl7OIxZLlRYA1ommnvOkmb3dhABAdtvNSAie4Gvezr2MJQfS02pR0eJyoeK5qZ95yFVe7cQdCHR3ctq6nq4hnxAiEA+9Z4C6T2joJT0GI9EWU6EDTfuXHfIQQKs4XGZI+Tf28CIQCVEfpC1MktWRXAvwJsS+ZIRlJnxkvoziqRvzZHuC4YqQIhAMwanwJ4+Sa4s6sQ44OEshFOeP/4LSm5995VjlwUDSvbAiEAiPb+oR8PRMpAUVtu54AJMsjh+BVbM6kRtd4hCl5whBkCIQCyqD+pM/caore6N73YtRHF8P4d9MW5U1QLO9juTAy2Dw==&quot;;

String rbsign3 = MD5WithRSAUtil1.type_1(privateKey,pubKey,rb_data3);
vars.put(&quot;rbsign3&quot;,rbsign3);</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取七牛token" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">mp.flins.com.cn</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/business/rb/getQiNiuToken</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取七牛token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">qiNiuToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.qiNiuToken</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${base64}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">upload-z2.qiniup.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/putb64/-1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">UpToken ${qiNiuToken}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/octet-stream</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="把图片转换成base64" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import com.image.util.*;

String code = ImageUtil.base64(&quot;D:/images/TR8.jpg&quot;);
vars.put(&quot;base64&quot;,code);
</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取imageurl" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">key</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.key</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ocr" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">mp.flins.com.cn</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/demo/baiduOCR?url=Fk2JpTs0LcTko54vjvXjsMqzLfDf</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="data" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">data</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="model" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;log_id&quot;: 5173842561778627089,&#xd;
	&quot;words_result&quot;: [{&#xd;
		&quot;words&quot;: &quot;成都西部甲状腺医院&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 240,&#xd;
			&quot;top&quot;: 64,&#xd;
			&quot;left&quot;: 193,&#xd;
			&quot;height&quot;: 21&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.998933,&#xd;
			&quot;variance&quot;: 4.0E-6,&#xd;
			&quot;min&quot;: 0.993289&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;成&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 13,&#xd;
				&quot;top&quot;: 64,&#xd;
				&quot;left&quot;: 199,&#xd;
				&quot;height&quot;: 21&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;都&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 13,&#xd;
				&quot;top&quot;: 64,&#xd;
				&quot;left&quot;: 223,&#xd;
				&quot;height&quot;: 21&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;西&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 13,&#xd;
				&quot;top&quot;: 64,&#xd;
				&quot;left&quot;: 247,&#xd;
				&quot;height&quot;: 21&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;部&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 13,&#xd;
				&quot;top&quot;: 64,&#xd;
				&quot;left&quot;: 277,&#xd;
				&quot;height&quot;: 21&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;甲&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 13,&#xd;
				&quot;top&quot;: 64,&#xd;
				&quot;left&quot;: 301,&#xd;
				&quot;height&quot;: 21&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;状&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 13,&#xd;
				&quot;top&quot;: 64,&#xd;
				&quot;left&quot;: 331,&#xd;
				&quot;height&quot;: 21&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;腺&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 13,&#xd;
				&quot;top&quot;: 64,&#xd;
				&quot;left&quot;: 355,&#xd;
				&quot;height&quot;: 21&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;医&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 12,&#xd;
				&quot;top&quot;: 64,&#xd;
				&quot;left&quot;: 386,&#xd;
				&quot;height&quot;: 21&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;院&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 12,&#xd;
				&quot;top&quot;: 64,&#xd;
				&quot;left&quot;: 410,&#xd;
				&quot;height&quot;: 21&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;超声医学影像报告单&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 154,&#xd;
			&quot;top&quot;: 114,&#xd;
			&quot;left&quot;: 238,&#xd;
			&quot;height&quot;: 19&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.999829,&#xd;
			&quot;variance&quot;: 0.0,&#xd;
			&quot;min&quot;: 0.999294&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;超&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 12,&#xd;
				&quot;top&quot;: 114,&#xd;
				&quot;left&quot;: 238,&#xd;
				&quot;height&quot;: 19&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;声&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 24,&#xd;
				&quot;top&quot;: 114,&#xd;
				&quot;left&quot;: 254,&#xd;
				&quot;height&quot;: 19&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;医&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 114,&#xd;
				&quot;left&quot;: 277,&#xd;
				&quot;height&quot;: 19&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;学&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 12,&#xd;
				&quot;top&quot;: 114,&#xd;
				&quot;left&quot;: 293,&#xd;
				&quot;height&quot;: 19&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;影&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 12,&#xd;
				&quot;top&quot;: 114,&#xd;
				&quot;left&quot;: 310,&#xd;
				&quot;height&quot;: 19&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;像&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 114,&#xd;
				&quot;left&quot;: 327,&#xd;
				&quot;height&quot;: 19&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;报&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 114,&#xd;
				&quot;left&quot;: 344,&#xd;
				&quot;height&quot;: 19&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;告&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 12,&#xd;
				&quot;top&quot;: 114,&#xd;
				&quot;left&quot;: 360,&#xd;
				&quot;height&quot;: 19&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;单&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 12,&#xd;
				&quot;top&quot;: 114,&#xd;
				&quot;left&quot;: 377,&#xd;
				&quot;height&quot;: 19&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;检查部位:甲状腺&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 102,&#xd;
			&quot;top&quot;: 141,&#xd;
			&quot;left&quot;: 57,&#xd;
			&quot;height&quot;: 16&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.968403,&#xd;
			&quot;variance&quot;: 0.006724,&#xd;
			&quot;min&quot;: 0.751465&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;检&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 141,&#xd;
				&quot;left&quot;: 57,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;查&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 141,&#xd;
				&quot;left&quot;: 71,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;部&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 141,&#xd;
				&quot;left&quot;: 84,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;位&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 141,&#xd;
				&quot;left&quot;: 94,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 141,&#xd;
				&quot;left&quot;: 105,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;甲&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 141,&#xd;
				&quot;left&quot;: 121,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;状&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 141,&#xd;
				&quot;left&quot;: 135,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;腺&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 141,&#xd;
				&quot;left&quot;: 148,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;超声号:&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 43,&#xd;
			&quot;top&quot;: 142,&#xd;
			&quot;left&quot;: 468,&#xd;
			&quot;height&quot;: 14&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.99808,&#xd;
			&quot;variance&quot;: 1.1E-5,&#xd;
			&quot;min&quot;: 0.992385&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;超&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 13,&#xd;
				&quot;top&quot;: 142,&#xd;
				&quot;left&quot;: 468,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;声&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 142,&#xd;
				&quot;left&quot;: 480,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;号&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 142,&#xd;
				&quot;left&quot;: 492,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 7,&#xd;
				&quot;top&quot;: 142,&#xd;
				&quot;left&quot;: 503,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;姓名:性别:女年龄:23&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 229,&#xd;
			&quot;top&quot;: 168,&#xd;
			&quot;left&quot;: 57,&#xd;
			&quot;height&quot;: 16&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.999214,&#xd;
			&quot;variance&quot;: 2.0E-6,&#xd;
			&quot;min&quot;: 0.994466&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;姓&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 168,&#xd;
				&quot;left&quot;: 57,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;名&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 168,&#xd;
				&quot;left&quot;: 70,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 168,&#xd;
				&quot;left&quot;: 82,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;性&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 168,&#xd;
				&quot;left&quot;: 165,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;别&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 168,&#xd;
				&quot;left&quot;: 173,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 168,&#xd;
				&quot;left&quot;: 185,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;女&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 168,&#xd;
				&quot;left&quot;: 200,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;年&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 168,&#xd;
				&quot;left&quot;: 245,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;龄&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 168,&#xd;
				&quot;left&quot;: 254,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 168,&#xd;
				&quot;left&quot;: 263,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;2&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 168,&#xd;
				&quot;left&quot;: 270,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;3&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 7,&#xd;
				&quot;top&quot;: 168,&#xd;
				&quot;left&quot;: 279,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;初复诊&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 41,&#xd;
			&quot;top&quot;: 170,&#xd;
			&quot;left&quot;: 341,&#xd;
			&quot;height&quot;: 13&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.999364,&#xd;
			&quot;variance&quot;: 1.0E-6,&#xd;
			&quot;min&quot;: 0.998135&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;初&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 170,&#xd;
				&quot;left&quot;: 341,&#xd;
				&quot;height&quot;: 13&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;复&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 170,&#xd;
				&quot;left&quot;: 352,&#xd;
				&quot;height&quot;: 13&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;诊&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 170,&#xd;
				&quot;left&quot;: 364,&#xd;
				&quot;height&quot;: 13&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;科别:&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 31,&#xd;
			&quot;top&quot;: 169,&#xd;
			&quot;left&quot;: 447,&#xd;
			&quot;height&quot;: 13&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.995973,&#xd;
			&quot;variance&quot;: 2.3E-5,&#xd;
			&quot;min&quot;: 0.989255&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;科&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 169,&#xd;
				&quot;left&quot;: 447,&#xd;
				&quot;height&quot;: 13&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;别&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 169,&#xd;
				&quot;left&quot;: 459,&#xd;
				&quot;height&quot;: 13&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 7,&#xd;
				&quot;top&quot;: 169,&#xd;
				&quot;left&quot;: 470,&#xd;
				&quot;height&quot;: 13&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;检查号:2956病历号:&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 147,&#xd;
			&quot;top&quot;: 189,&#xd;
			&quot;left&quot;: 57,&#xd;
			&quot;height&quot;: 16&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.99376,&#xd;
			&quot;variance&quot;: 1.67E-4,&#xd;
			&quot;min&quot;: 0.954092&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;检&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 189,&#xd;
				&quot;left&quot;: 57,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;查&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 189,&#xd;
				&quot;left&quot;: 71,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;号&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 189,&#xd;
				&quot;left&quot;: 84,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 189,&#xd;
				&quot;left&quot;: 92,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;2&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 189,&#xd;
				&quot;left&quot;: 101,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;9&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 189,&#xd;
				&quot;left&quot;: 106,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;5&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 189,&#xd;
				&quot;left&quot;: 115,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;6&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 189,&#xd;
				&quot;left&quot;: 119,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;病&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 189,&#xd;
				&quot;left&quot;: 162,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;历&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 189,&#xd;
				&quot;left&quot;: 176,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;号&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 189,&#xd;
				&quot;left&quot;: 185,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 7,&#xd;
				&quot;top&quot;: 189,&#xd;
				&quot;left&quot;: 197,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;住院号:&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 42,&#xd;
			&quot;top&quot;: 191,&#xd;
			&quot;left&quot;: 263,&#xd;
			&quot;height&quot;: 14&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.995964,&#xd;
			&quot;variance&quot;: 4.4E-5,&#xd;
			&quot;min&quot;: 0.984535&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;住&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 191,&#xd;
				&quot;left&quot;: 263,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;院&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 191,&#xd;
				&quot;left&quot;: 274,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;号&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 191,&#xd;
				&quot;left&quot;: 287,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 191,&#xd;
				&quot;left&quot;: 297,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;病区号:&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 42,&#xd;
			&quot;top&quot;: 191,&#xd;
			&quot;left&quot;: 365,&#xd;
			&quot;height&quot;: 14&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.991703,&#xd;
			&quot;variance&quot;: 2.0E-4,&#xd;
			&quot;min&quot;: 0.967232&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;病&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 191,&#xd;
				&quot;left&quot;: 365,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;区&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 191,&#xd;
				&quot;left&quot;: 376,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;号&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 191,&#xd;
				&quot;left&quot;: 392,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 7,&#xd;
				&quot;top&quot;: 191,&#xd;
				&quot;left&quot;: 398,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;床位号:&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 44,&#xd;
			&quot;top&quot;: 190,&#xd;
			&quot;left&quot;: 467,&#xd;
			&quot;height&quot;: 13&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.99851,&#xd;
			&quot;variance&quot;: 3.0E-6,&#xd;
			&quot;min&quot;: 0.995393&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;床&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 190,&#xd;
				&quot;left&quot;: 467,&#xd;
				&quot;height&quot;: 13&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;位&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 190,&#xd;
				&quot;left&quot;: 479,&#xd;
				&quot;height&quot;: 13&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;号&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 190,&#xd;
				&quot;left&quot;: 494,&#xd;
				&quot;height&quot;: 13&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 7,&#xd;
				&quot;top&quot;: 190,&#xd;
				&quot;left&quot;: 504,&#xd;
				&quot;height&quot;: 13&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;超声所见:&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 55,&#xd;
			&quot;top&quot;: 414,&#xd;
			&quot;left&quot;: 58,&#xd;
			&quot;height&quot;: 15&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.996016,&#xd;
			&quot;variance&quot;: 6.0E-5,&#xd;
			&quot;min&quot;: 0.980586&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;超&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 414,&#xd;
				&quot;left&quot;: 58,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;声&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 414,&#xd;
				&quot;left&quot;: 71,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;所&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 414,&#xd;
				&quot;left&quot;: 84,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;见&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 414,&#xd;
				&quot;left&quot;: 97,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 414,&#xd;
				&quot;left&quot;: 104,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;甲状腺:&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 45,&#xd;
			&quot;top&quot;: 429,&#xd;
			&quot;left&quot;: 63,&#xd;
			&quot;height&quot;: 15&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.997238,&#xd;
			&quot;variance&quot;: 1.8E-5,&#xd;
			&quot;min&quot;: 0.98999&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;甲&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 429,&#xd;
				&quot;left&quot;: 63,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;状&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 429,&#xd;
				&quot;left&quot;: 76,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;腺&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 429,&#xd;
				&quot;left&quot;: 88,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 7,&#xd;
				&quot;top&quot;: 429,&#xd;
				&quot;left&quot;: 99,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;甲状腺因团块及结节压迫部分显示,&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 212,&#xd;
			&quot;top&quot;: 446,&#xd;
			&quot;left&quot;: 77,&#xd;
			&quot;height&quot;: 15&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.998968,&#xd;
			&quot;variance&quot;: 1.0E-6,&#xd;
			&quot;min&quot;: 0.996546&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;甲&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 77,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;状&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 90,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;腺&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 103,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;因&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 116,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;团&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 130,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;块&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 143,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;及&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 156,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;结&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 165,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;节&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 183,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;压&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 192,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;迫&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 205,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;部&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 219,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;分&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 232,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;显&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 245,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;示&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 259,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 446,&#xd;
				&quot;left&quot;: 267,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;甲状腺体积增大,形态失常,被膜不完整,实质回声杂乱不均质,双侧叶及峡部均可见&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 490,&#xd;
			&quot;top&quot;: 462,&#xd;
			&quot;left&quot;: 70,&#xd;
			&quot;height&quot;: 16&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.998348,&#xd;
			&quot;variance&quot;: 6.0E-6,&#xd;
			&quot;min&quot;: 0.988153&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;甲&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 70,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;状&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 83,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;腺&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 96,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;体&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 110,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;积&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 123,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;增&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 137,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;大&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 150,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 157,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;形&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 172,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;态&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 186,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;失&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 199,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;常&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 213,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 225,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;被&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 240,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;膜&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 249,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;不&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 267,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;完&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 276,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;整&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 290,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 302,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;实&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 316,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;质&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 330,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;回&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 339,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;声&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 352,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;杂&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 366,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;乱&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 379,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;不&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 393,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;均&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 406,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;质&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 420,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 427,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;双&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 442,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;侧&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 455,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;叶&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 469,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;及&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 482,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;峡&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 496,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;部&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 509,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;均&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 523,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;可&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 536,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;见&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 462,&#xd;
				&quot;left&quot;: 550,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;多个囊实混合性及等回声结节及团块,形尚规则,边界欠清,并相互融合,几乎占满整&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 504,&#xd;
			&quot;top&quot;: 479,&#xd;
			&quot;left&quot;: 56,&#xd;
			&quot;height&quot;: 16&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.979512,&#xd;
			&quot;variance&quot;: 0.005712,&#xd;
			&quot;min&quot;: 0.631283&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;多&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 56,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;个&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 70,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;囊&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 84,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;实&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 98,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;混&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 108,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;合&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 122,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;性&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 136,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;及&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 150,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;等&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 160,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;回&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 174,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;声&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 188,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;结&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 198,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;节&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 212,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;及&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 226,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;团&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 240,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;块&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 250,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 262,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;形&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 278,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;尚&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 302,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;规&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 316,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;则&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 325,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 338,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;边&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 354,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;界&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 368,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;欠&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 382,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;清&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 392,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 404,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;并&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 420,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;相&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 429,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;互&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 443,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;融&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 458,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;合&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 472,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 479,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;几&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 495,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;乎&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 510,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;占&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 524,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;满&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 533,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;整&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 479,&#xd;
				&quot;left&quot;: 547,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;个腺体,下至锁骨上窝,部分结节内可见丰富的血流信号,右侧其中一个大小约&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 452,&#xd;
			&quot;top&quot;: 496,&#xd;
			&quot;left&quot;: 56,&#xd;
			&quot;height&quot;: 15&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.998485,&#xd;
			&quot;variance&quot;: 6.0E-6,&#xd;
			&quot;min&quot;: 0.988383&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;个&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 56,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;腺&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 69,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;体&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 83,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 94,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;下&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 109,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;至&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 123,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;锁&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 136,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;骨&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 150,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;上&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 163,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;窝&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 172,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 184,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;部&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 199,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;分&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 213,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;结&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 226,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;节&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 239,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;内&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 253,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;可&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 266,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;见&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 276,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;丰&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 289,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;富&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 302,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;的&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 316,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;血&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 329,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;流&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 338,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;信&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 352,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;号&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 365,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 377,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;右&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 392,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;侧&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 405,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;其&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 419,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;中&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 432,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;一&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 446,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;个&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 459,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;大&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 472,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;小&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 481,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;约&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 496,&#xd;
				&quot;left&quot;: 495,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;32mmx29mmx22mm,左侧其中一个大小约2mmx25mmx22mm,CDF1:双侧甲状腺内血流信号丰&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 506,&#xd;
			&quot;top&quot;: 512,&#xd;
			&quot;left&quot;: 54,&#xd;
			&quot;height&quot;: 16&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.98558,&#xd;
			&quot;variance&quot;: 0.002041,&#xd;
			&quot;min&quot;: 0.710363&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;3&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 54,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;2&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 61,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 66,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 75,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;x&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 79,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;2&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 88,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;9&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 93,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 97,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 106,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;x&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 111,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;2&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 120,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;2&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 129,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 133,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 142,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 147,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;左&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 162,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;侧&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 175,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;其&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 189,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;中&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 202,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;一&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 211,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;个&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 225,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;大&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 238,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;小&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 252,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;约&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 265,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;2&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 279,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 287,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 296,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;x&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 300,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;2&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 306,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;5&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 314,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 318,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 327,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;x&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 332,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;2&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 336,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;2&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 345,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 350,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 359,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 368,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;C&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 377,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;D&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 381,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;F&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 390,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;1&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 395,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 404,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;双&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 419,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;侧&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 432,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;甲&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 446,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;状&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 455,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;腺&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 468,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;内&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 482,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;血&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 495,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;流&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 509,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;信&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 522,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;号&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 536,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;丰&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 512,&#xd;
				&quot;left&quot;: 549,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;富&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 20,&#xd;
			&quot;top&quot;: 529,&#xd;
			&quot;left&quot;: 55,&#xd;
			&quot;height&quot;: 15&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.989263,&#xd;
			&quot;variance&quot;: 0.0,&#xd;
			&quot;min&quot;: 0.989263&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;富&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 529,&#xd;
				&quot;left&quot;: 55,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;双侧颈部可见多个低回声结节,右侧最大者位于区大小约为50mmx20mm,左侧最大者&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 491,&#xd;
			&quot;top&quot;: 545,&#xd;
			&quot;left&quot;: 69,&#xd;
			&quot;height&quot;: 16&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.984007,&#xd;
			&quot;variance&quot;: 0.003444,&#xd;
			&quot;min&quot;: 0.639824&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;双&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 69,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;侧&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 83,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;颈&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 97,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;部&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 107,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;可&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 121,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;见&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 135,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;多&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 149,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;个&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 163,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;低&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 173,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;回&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 187,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;声&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 202,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;结&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 211,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;节&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 225,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 233,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;右&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 254,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;侧&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 263,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;最&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 277,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;大&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 292,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;者&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 302,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;位&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 316,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;于&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 6,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 330,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;区&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 354,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;大&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 369,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;小&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 378,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;约&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 392,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;为&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 406,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;5&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 419,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;0&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 424,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 433,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 443,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;x&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 448,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;2&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 454,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;0&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 462,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 467,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 476,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 483,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;左&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 497,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;侧&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 506,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;最&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 520,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;大&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 535,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;者&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 545,&#xd;
				&quot;left&quot;: 549,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;位于V区大小约为33mmx20mm,形态不规则,边界不清晰,皮髓质分界不清晰,内可见丰&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 498,&#xd;
			&quot;top&quot;: 562,&#xd;
			&quot;left&quot;: 55,&#xd;
			&quot;height&quot;: 16&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.983944,&#xd;
			&quot;variance&quot;: 0.003743,&#xd;
			&quot;min&quot;: 0.636957&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;位&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 55,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;于&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 72,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;V&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 80,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;区&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 90,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;大&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 104,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;小&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 113,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;约&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 126,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;为&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 144,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;3&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 153,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;3&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 165,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 170,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 179,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;x&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 183,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;2&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 188,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;0&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 197,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 201,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 210,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 219,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;形&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 230,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;态&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 243,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;不&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 257,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;规&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 270,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;则&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 284,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 291,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;边&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 307,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;界&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 320,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;不&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 14,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 334,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;清&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 347,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;晰&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 360,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 372,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;皮&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 383,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;髓&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 397,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;质&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 410,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;分&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 423,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;界&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 437,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;不&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 450,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;清&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 464,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;晰&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 473,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 485,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;内&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 504,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;可&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 513,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;见&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 527,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;丰&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 562,&#xd;
				&quot;left&quot;: 540,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;富血流信号&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 72,&#xd;
			&quot;top&quot;: 580,&#xd;
			&quot;left&quot;: 55,&#xd;
			&quot;height&quot;: 14&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.999436,&#xd;
			&quot;variance&quot;: 1.0E-6,&#xd;
			&quot;min&quot;: 0.997706&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;富&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 580,&#xd;
				&quot;left&quot;: 55,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;血&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 580,&#xd;
				&quot;left&quot;: 71,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;流&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 580,&#xd;
				&quot;left&quot;: 84,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;信&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 580,&#xd;
				&quot;left&quot;: 96,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;号&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 580,&#xd;
				&quot;left&quot;: 109,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;气管受压向左偏移,双侧叶颈部血管因团块压迫向后偏移&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 329,&#xd;
			&quot;top&quot;: 596,&#xd;
			&quot;left&quot;: 68,&#xd;
			&quot;height&quot;: 14&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.996513,&#xd;
			&quot;variance&quot;: 1.35E-4,&#xd;
			&quot;min&quot;: 0.940076&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;气&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 68,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;管&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 80,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;受&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 93,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;压&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 110,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;向&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 122,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;左&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 135,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;偏&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 147,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;移&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 160,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 7,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 171,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;双&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 185,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;侧&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 197,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;叶&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 210,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;颈&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 223,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;部&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 239,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;血&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 252,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;管&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 264,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;因&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 277,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;团&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 290,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;块&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 302,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;压&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 315,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;迫&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 327,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;向&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 340,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;后&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 352,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;偏&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 365,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;移&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 596,&#xd;
				&quot;left&quot;: 378,&#xd;
				&quot;height&quot;: 14&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;弹性成像显示:对病灶部位垂直施压做微小振动,解压深度约为1-2mm,渲染呈红、&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 467,&#xd;
			&quot;top&quot;: 612,&#xd;
			&quot;left&quot;: 74,&#xd;
			&quot;height&quot;: 16&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.995279,&#xd;
			&quot;variance&quot;: 3.4E-4,&#xd;
			&quot;min&quot;: 0.882713&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;弹&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 74,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;性&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 87,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;成&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 101,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;像&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 114,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;显&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 128,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;示&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 142,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 149,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;对&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 164,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;病&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 178,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;灶&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 192,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;部&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 205,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;位&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 219,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;垂&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 232,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;直&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 246,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;施&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 255,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;压&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 268,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;做&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 282,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;微&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 296,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;小&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 310,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;振&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 319,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;动&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 332,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 344,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;解&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 360,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;压&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 373,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;深&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 387,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;度&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 396,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;约&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 409,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;为&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 427,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;1&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 435,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;-&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 440,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;2&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 449,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 453,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;m&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 462,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 467,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;渲&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 482,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;染&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 495,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;呈&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 509,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;红&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 522,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;、&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 612,&#xd;
				&quot;left&quot;: 530,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;绿、蓝、三色相间,弹性评分:右侧3分,左侧3分&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 313,&#xd;
			&quot;top&quot;: 629,&#xd;
			&quot;left&quot;: 53,&#xd;
			&quot;height&quot;: 16&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.990315,&#xd;
			&quot;variance&quot;: 0.001166,&#xd;
			&quot;min&quot;: 0.831174&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;绿&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 53,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;、&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 65,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;蓝&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 80,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;、&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 92,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;三&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 107,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;色&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 120,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;相&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 134,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;间&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 147,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 159,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;弹&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 174,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;性&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 188,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;评&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 197,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;分&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 210,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 222,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;右&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 237,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;侧&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 251,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;3&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 267,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;分&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 278,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;,&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 294,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;左&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 309,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;侧&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 322,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;3&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 339,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;分&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 629,&#xd;
				&quot;left&quot;: 350,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;超声提示:&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 58,&#xd;
			&quot;top&quot;: 695,&#xd;
			&quot;left&quot;: 60,&#xd;
			&quot;height&quot;: 15&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.997585,&#xd;
			&quot;variance&quot;: 2.3E-5,&#xd;
			&quot;min&quot;: 0.988097&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;超&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 695,&#xd;
				&quot;left&quot;: 60,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;声&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 695,&#xd;
				&quot;left&quot;: 76,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;提&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 695,&#xd;
				&quot;left&quot;: 89,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;示&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 695,&#xd;
				&quot;left&quot;: 101,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 5,&#xd;
				&quot;top&quot;: 695,&#xd;
				&quot;left&quot;: 113,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;甲状腺弥漫性病变(请结合甲功能)&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 204,&#xd;
			&quot;top&quot;: 711,&#xd;
			&quot;left&quot;: 60,&#xd;
			&quot;height&quot;: 15&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.999189,&#xd;
			&quot;variance&quot;: 1.0E-6,&#xd;
			&quot;min&quot;: 0.996253&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;甲&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 60,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;状&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 73,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;腺&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 87,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;弥&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 100,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;漫&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 113,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;性&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 126,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;病&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 139,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;变&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 152,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;(&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 168,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;请&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 179,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;结&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 192,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;合&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 205,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;甲&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 218,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;功&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 231,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;能&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 244,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;)&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 711,&#xd;
				&quot;left&quot;: 256,&#xd;
				&quot;height&quot;: 15&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;甲状腺双侧叶结节及团块(多发性)T1-RADS:4A类弹性评分3分(建议穿刺活&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 479,&#xd;
			&quot;top&quot;: 728,&#xd;
			&quot;left&quot;: 61,&#xd;
			&quot;height&quot;: 17&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.980459,&#xd;
			&quot;variance&quot;: 0.001489,&#xd;
			&quot;min&quot;: 0.867031&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;甲&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 61,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;状&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 75,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;腺&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 85,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;双&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 100,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;侧&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 114,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;叶&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 124,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;结&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 139,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;节&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 154,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;及&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 164,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;团&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 179,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;块&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 193,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;(&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 206,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;多&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 218,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;发&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 228,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;性&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 243,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;)&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 255,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;T&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 275,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;1&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 285,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;-&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 290,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;R&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 295,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;A&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 305,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;D&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 310,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;S&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 320,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;:&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 325,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;4&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 335,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;A&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 345,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;类&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 356,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;弹&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 386,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;性&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 395,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;评&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 410,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;分&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 425,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;3&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 443,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;分&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 450,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;(&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 463,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;建&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 16,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 474,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;议&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 489,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;穿&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 504,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;刺&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 514,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;活&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 11,&#xd;
				&quot;top&quot;: 728,&#xd;
				&quot;left&quot;: 528,&#xd;
				&quot;height&quot;: 17&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;检)&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 22,&#xd;
			&quot;top&quot;: 747,&#xd;
			&quot;left&quot;: 52,&#xd;
			&quot;height&quot;: 13&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.992115,&#xd;
			&quot;variance&quot;: 2.0E-5,&#xd;
			&quot;min&quot;: 0.987612&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;检&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 747,&#xd;
				&quot;left&quot;: 52,&#xd;
				&quot;height&quot;: 13&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;)&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 7,&#xd;
				&quot;top&quot;: 747,&#xd;
				&quot;left&quot;: 66,&#xd;
				&quot;height&quot;: 13&#xd;
			}&#xd;
		}]&#xd;
	}, {&#xd;
		&quot;words&quot;: &quot;双侧颈部淋巴结结构异常伴增大(多发性)(性质待定?)&quot;,&#xd;
		&quot;location&quot;: {&#xd;
			&quot;width&quot;: 340,&#xd;
			&quot;top&quot;: 761,&#xd;
			&quot;left&quot;: 53,&#xd;
			&quot;height&quot;: 16&#xd;
		},&#xd;
		&quot;probability&quot;: {&#xd;
			&quot;average&quot;: 0.999263,&#xd;
			&quot;variance&quot;: 2.0E-6,&#xd;
			&quot;min&quot;: 0.994675&#xd;
		},&#xd;
		&quot;chars&quot;: [{&#xd;
			&quot;char&quot;: &quot;双&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 62,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;侧&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 76,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;颈&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 85,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;部&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 99,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;淋&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 113,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;巴&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 126,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;结&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 140,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;结&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 149,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;构&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 163,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;异&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 177,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;常&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 191,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;伴&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 204,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;增&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 218,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;大&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 232,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;(&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 244,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;多&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 255,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;发&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 269,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;性&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 282,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;)&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 294,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;(&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 9,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 308,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;性&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 319,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;质&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 333,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;待&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 346,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;定&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 10,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 360,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;?&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 8,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 368,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}, {&#xd;
			&quot;char&quot;: &quot;)&quot;,&#xd;
			&quot;location&quot;: {&#xd;
				&quot;width&quot;: 7,&#xd;
				&quot;top&quot;: 761,&#xd;
				&quot;left&quot;: 386,&#xd;
				&quot;height&quot;: 16&#xd;
			}&#xd;
		}]&#xd;
	}],&#xd;
	&quot;words_result_num&quot;: 30,&#xd;
	&quot;direction&quot;: 0&#xd;
&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">192.168.5.200</stringProp>
          <stringProp name="HTTPSampler.port">5000</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/ceshi</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
