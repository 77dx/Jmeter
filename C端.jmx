<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="C端" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">E:\miaomiao\apache-jmeter-4.0\myjar\zb_sign.jar,E:\miaomiao\apache-jmeter-4.0\lib\ext\fastjson-1.2.58.jar</stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">mp.flins.com.cn</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">token</stringProp>
            <stringProp name="Header.value">fa13c712588f4ddfabbba133ff3c12d1</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="甲状腺问卷接口(小程序)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询已测评人数" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;: &quot;thyroid&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/customer/ev/count</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询最新测评记录信息" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;: &quot;thyroid&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/customer/ev/current</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">data</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;code&quot;:&quot;0000&quot;,&quot;desc&quot;:&quot;请求成功&quot;,&quot;data&quot;:(.*)}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="未做问卷-提交问卷" enabled="true">
          <stringProp name="IfController.condition">${data}==null</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取甲状腺测试题-女性" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;: &quot;thyroid&quot;,&#xd;
	&quot;sex&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/customer/qa/operlist</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1019197760">&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取题目id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交甲状腺测试题-女性" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;id&quot;:${id},&#xd;
   &quot;qaQuestList&quot;: [&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000001&quot;,&#xd;
           &quot;question&quot;: &quot;您的性别？&quot;,&#xd;
           &quot;questType&quot;: 1,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 1,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 1,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 1,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;女性&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 1,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 2,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;男性&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;A&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 1&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000003&quot;,&#xd;
           &quot;question&quot;: &quot;您的身高＿＿＿（厘米cm）&quot;,&#xd;
           &quot;questType&quot;: 3,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 2,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;165&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
               {&#xd;
                   &quot;ruleContent&quot;: &quot;^[1-9]*[1-9][0-9]*$&quot;,&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 3,&#xd;
                   &quot;createTime&quot;: 1540459772000,&#xd;
                   &quot;ruleType&quot;: 1,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;,&#xd;
                   &quot;id&quot;: 1&#xd;
               }&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: &quot;请输入您的身高&quot;,&#xd;
           &quot;inputType&quot;: 1,&#xd;
           &quot;id&quot;: 3&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000002&quot;,&#xd;
           &quot;question&quot;: &quot;您的年龄？&quot;,&#xd;
           &quot;questType&quot;: 1,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 3,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 2,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 3,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;＜40岁&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 2,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 4,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;40-49岁&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 3,&#xd;
                   &quot;questId&quot;: 2,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 5,&#xd;
                   &quot;key&quot;: &quot;C&quot;,&#xd;
                   &quot;desc&quot;: &quot;50-59岁&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 4,&#xd;
                   &quot;questId&quot;: 2,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 6,&#xd;
                   &quot;key&quot;: &quot;D&quot;,&#xd;
                   &quot;desc&quot;: &quot;60-69岁&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 5,&#xd;
                   &quot;questId&quot;: 2,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 7,&#xd;
                   &quot;key&quot;: &quot;E&quot;,&#xd;
                   &quot;desc&quot;: &quot;≥70岁&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;A&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 2&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000004&quot;,&#xd;
           &quot;question&quot;: &quot;体重＿＿＿（公斤kg）&quot;,&#xd;
           &quot;questType&quot;: 3,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 4,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;60&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
               {&#xd;
                   &quot;ruleContent&quot;: &quot;^[1-9][0-9]*([.]{1}[0-9]+){0,1}$&quot;,&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 4,&#xd;
                   &quot;createTime&quot;: 1540459772000,&#xd;
                   &quot;ruleType&quot;: 1,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;,&#xd;
                   &quot;id&quot;: 2&#xd;
               }&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: &quot;请输入您的体重&quot;,&#xd;
           &quot;inputType&quot;: 2,&#xd;
           &quot;id&quot;: 4&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000005&quot;,&#xd;
           &quot;question&quot;: &quot;您生活的城市？&quot;,&#xd;
           &quot;questType&quot;: 1,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 5,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 5,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 8,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;不相信眼泪的北、上、广、深&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 5,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 9,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;省会、直辖市&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 3,&#xd;
                   &quot;questId&quot;: 5,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 10,&#xd;
                   &quot;key&quot;: &quot;C&quot;,&#xd;
                   &quot;desc&quot;: &quot;远离拥挤的三线城市&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 4,&#xd;
                   &quot;questId&quot;: 5,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 11,&#xd;
                   &quot;key&quot;: &quot;D&quot;,&#xd;
                   &quot;desc&quot;: &quot;美丽的小乡村&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;D&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 5&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000006&quot;,&#xd;
           &quot;question&quot;: &quot;您的文化程度？&quot;,&#xd;
           &quot;questType&quot;: 1,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 6,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 6,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 12,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;大专、本科及以上&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 6,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 13,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;高中或中专&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 3,&#xd;
                   &quot;questId&quot;: 6,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 14,&#xd;
                   &quot;key&quot;: &quot;C&quot;,&#xd;
                   &quot;desc&quot;: &quot;初中及以下&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;C&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 6&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000007&quot;,&#xd;
           &quot;question&quot;: &quot;您以前有得过甲状腺疾病吗？&quot;,&#xd;
           &quot;questType&quot;: 2,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 7,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 7,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 15,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;有得过甲状腺结节&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 7,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 16,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;有得过甲状腺炎、甲亢、甲减、甲状腺腺瘤等至少其中一种&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 3,&#xd;
                   &quot;questId&quot;: 7,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 17,&#xd;
                   &quot;key&quot;: &quot;C&quot;,&#xd;
                   &quot;desc&quot;: &quot;没有或者不知道&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;C&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
               {&#xd;
                   &quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;C\&quot;,\&quot;B\&quot;: \&quot;C\&quot;}&quot;,&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 7,&#xd;
                   &quot;createTime&quot;: 1540459772000,&#xd;
                   &quot;ruleType&quot;: 2,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;,&#xd;
                   &quot;id&quot;: 3&#xd;
               }&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 7&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000008&quot;,&#xd;
           &quot;question&quot;: &quot;您的亲属中有没有患甲状腺癌的？&quot;,&#xd;
           &quot;questType&quot;: 2,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 8,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 8,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 18,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;父母、子女、兄弟姐妹&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 8,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 19,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;叔、伯、姑、舅、姨、祖父母、外祖父母&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 3,&#xd;
                   &quot;questId&quot;: 8,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 20,&#xd;
                   &quot;key&quot;: &quot;C&quot;,&#xd;
                   &quot;desc&quot;: &quot;没有或者不知道&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;C&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
               {&#xd;
                   &quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;C\&quot;,\&quot;B\&quot;: \&quot;C\&quot;}&quot;,&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 8,&#xd;
                   &quot;createTime&quot;: 1540459772000,&#xd;
                   &quot;ruleType&quot;: 2,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;,&#xd;
                   &quot;id&quot;: 4&#xd;
               }&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 8&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000009&quot;,&#xd;
           &quot;question&quot;: &quot;您是否经常（每周≥3次）吃以下食物？&quot;,&#xd;
           &quot;questType&quot;: 2,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 9,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 9,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 21,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;海产类食物如：海鱼、海虾、海贝、海带、紫菜等&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 9,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 22,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;泡菜、咸蛋、腊肉以及其他腌制品&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 3,&#xd;
                   &quot;questId&quot;: 9,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 23,&#xd;
                   &quot;key&quot;: &quot;C&quot;,&#xd;
                   &quot;desc&quot;: &quot;以上都没有&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;A&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
               {&#xd;
                   &quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;C\&quot;,\&quot;B\&quot;: \&quot;C\&quot;}&quot;,&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 9,&#xd;
                   &quot;createTime&quot;: 1540459772000,&#xd;
                   &quot;ruleType&quot;: 2,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;,&#xd;
                   &quot;id&quot;: 5&#xd;
               }&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 9&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000010&quot;,&#xd;
           &quot;question&quot;: &quot;您是否有糖尿病或者血糖异常？&quot;,&#xd;
           &quot;questType&quot;: 1,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 10,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 10,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 24,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;有&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 10,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 25,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;没有或者不知道&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;C&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 10&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000011&quot;,&#xd;
           &quot;question&quot;: &quot;您是否有血脂高（甘油三脂、胆固醇）？&quot;,&#xd;
           &quot;questType&quot;: 1,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 11,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 11,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 26,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;有&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 11,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 27,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;没有或者不知道&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;C&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 11&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000012&quot;,&#xd;
           &quot;question&quot;: &quot;您曾经有没有接受过头颈部CT检查？&quot;,&#xd;
           &quot;questType&quot;: 1,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 12,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 12,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 28,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;有，18岁之前接受过&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 12,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 29,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;有，18岁之后接受过&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 3,&#xd;
                   &quot;questId&quot;: 12,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 30,&#xd;
                   &quot;key&quot;: &quot;C&quot;,&#xd;
                   &quot;desc&quot;: &quot;没有或者不知道&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;C&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 12&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000013&quot;,&#xd;
           &quot;question&quot;: &quot;您是否常常有下列情绪？&quot;,&#xd;
           &quot;questType&quot;: 2,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 13,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 13,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 31,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;容易烦恼和激动&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 13,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 32,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;爱生闷气&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 3,&#xd;
                   &quot;questId&quot;: 13,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 33,&#xd;
                   &quot;key&quot;: &quot;C&quot;,&#xd;
                   &quot;desc&quot;: &quot;遇事不愿与人倾诉&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 4,&#xd;
                   &quot;questId&quot;: 13,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 34,&#xd;
                   &quot;key&quot;: &quot;D&quot;,&#xd;
                   &quot;desc&quot;: &quot;处事态度悲观&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 5,&#xd;
                   &quot;questId&quot;: 13,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 35,&#xd;
                   &quot;key&quot;: &quot;E&quot;,&#xd;
                   &quot;desc&quot;: &quot;我是乐天派，啥都是浮云&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;D&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
               {&#xd;
                   &quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;E\&quot;,\&quot;B\&quot;: \&quot;E\&quot;,\&quot;C\&quot;: \&quot;E\&quot;,\&quot;D\&quot;: \&quot;E\&quot;}&quot;,&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 13,&#xd;
                   &quot;createTime&quot;: 1540459772000,&#xd;
                   &quot;ruleType&quot;: 2,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;,&#xd;
                   &quot;id&quot;: 6&#xd;
               }&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 13&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000014&quot;,&#xd;
           &quot;question&quot;: &quot;在平常的生活、工作中您有没有感觉到压力大、焦虑？&quot;,&#xd;
           &quot;questType&quot;: 1,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 14,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 14,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 36,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;有，经常觉得压力山大&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 14,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 38,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;部分时间有&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 3,&#xd;
                   &quot;questId&quot;: 14,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 39,&#xd;
                   &quot;key&quot;: &quot;C&quot;,&#xd;
                   &quot;desc&quot;: &quot;偶尔有或没有&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;C&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 14&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000015&quot;,&#xd;
           &quot;question&quot;: &quot;您与他人的相处的时候，通常是什么样的状态？&quot;,&#xd;
           &quot;questType&quot;: 1,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 15,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 15,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 40,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;喜欢与人交往，相处融洽&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 15,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 41,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;我喜欢特立独行，时不时地会与某些人有口角&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;B&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 15&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000016&quot;,&#xd;
           &quot;question&quot;: &quot;您是否曾经怀孕次数达3次以上？&quot;,&#xd;
           &quot;questType&quot;: 1,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 16,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 16,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 42,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;是（＞3次）&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 16,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 43,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;否（≤3次）&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;B&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 16&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000017&quot;,&#xd;
           &quot;question&quot;: &quot;您的初潮年龄是多少岁？&quot;,&#xd;
           &quot;questType&quot;: 1,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 17,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 17,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 44,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;＜14岁&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 17,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 45,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;≥14岁&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;B&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 17&#xd;
       },&#xd;
       {&#xd;
           &quot;code&quot;: &quot;QL-000018&quot;,&#xd;
           &quot;question&quot;: &quot;您是否患有乳腺增生？&quot;,&#xd;
           &quot;questType&quot;: 1,&#xd;
           &quot;epId&quot;: 1,&#xd;
           &quot;qpId&quot;: 1,&#xd;
           &quot;sortNo&quot;: 18,&#xd;
           &quot;qaQuestOptionList&quot;: [&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 1,&#xd;
                   &quot;questId&quot;: 18,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 46,&#xd;
                   &quot;key&quot;: &quot;A&quot;,&#xd;
                   &quot;desc&quot;: &quot;是&quot;&#xd;
               },&#xd;
               {&#xd;
                   &quot;sortNo&quot;: 2,&#xd;
                   &quot;questId&quot;: 18,&#xd;
                   &quot;createTime&quot;: 1540456216000,&#xd;
                   &quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
                   &quot;id&quot;: 47,&#xd;
                   &quot;key&quot;: &quot;B&quot;,&#xd;
                   &quot;desc&quot;: &quot;否&quot;&#xd;
               }&#xd;
           ],&#xd;
           &quot;answer&quot;: &quot;B&quot;,&#xd;
           &quot;createTime&quot;: 1540456151000,&#xd;
           &quot;qaQuestRuleList&quot;: [&#xd;
           ],&#xd;
           &quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
           &quot;subHead&quot;: null,&#xd;
           &quot;inputType&quot;: 3,&#xd;
           &quot;id&quot;: 18&#xd;
       }&#xd;
   ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/customer/qa/opersave</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1019197760">&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询最新测评结果-甲状腺" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/customer/qa/result/current</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询会员套餐" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;:&quot;thyroid&quot;	&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/customer/pack/query</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">query</stringProp>
            <stringProp name="RegexExtractor.regex">{&quot;code&quot;:&quot;0000&quot;,&quot;desc&quot;:&quot;请求成功&quot;,&quot;data&quot;:(.*)}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import com.alibaba.fastjson.JSONObject;

//提取data
String response_data = prev.getResponseDataAsString(); 
JSONObject object = JSONObject.parseObject(response_data);
String data = object.getString(&quot;data&quot;);

String result = &quot;true&quot;;

if(data.equals(&quot;[]&quot;)){
	result = &quot;true&quot;;	
}else{
	result = &quot;false&quot;;	
}
log.info(result);
vars.put(&quot;result&quot;,result);
</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="非会员" enabled="true">
          <stringProp name="IfController.condition">${result}==true</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取会员列表-非会员" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;:&quot;thyroid&quot;	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/customer/pack/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1019197760">&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="是会员" enabled="true">
          <stringProp name="IfController.condition">${result}==false</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取会员列表-是会员" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;:&quot;thyroid&quot;	&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/customer/pack/list</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1019197760">&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取七牛token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/customer/qiniu/getQiNiuToken</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取七牛token" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">qiNiuToken</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.qiNiuToken</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${base64}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">upload-z2.qiniup.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/putb64/-1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">UpToken ${qiNiuToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="把图片转换成base64" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.image.util.*;

String code = ImageUtil.base64(&quot;D:/images/TR6.jpg&quot;);
vars.put(&quot;base64&quot;,code);
</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取imageurl" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">imgUrl</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.key</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ocr识别图片文字" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;imgUrl&quot;:&quot;${imgUrl}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/customer/diagnose/checkimg</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1019197760">&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交B超报告" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;imgUrl&quot;:&quot;${imgUrl}&quot;,&#xd;
	&quot;isOwner&quot;:false,&#xd;
	&quot;nickName&quot;:&quot;大爷&quot;,&#xd;
	&quot;checkTimeStr&quot;:&quot;2012-09-10&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/customer/diagnose/save</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1019197760">&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="公众号" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">120</stringProp>
        <stringProp name="ThreadGroup.delay">1</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取个人信息" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/info</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我的健康档案" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/healthfile</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="个人资料" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/personalinfo</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="保存个人资料" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;:17,&#xd;
	&quot;name&quot;:&quot;七七&quot;,&#xd;
	&quot;sex&quot;:&quot;2&quot;,&#xd;
	&quot;birthdayStr&quot;:&quot;&quot;,&#xd;
	&quot;height&quot;:&quot;160&quot;,&#xd;
	&quot;weight&quot;:&quot;55&quot;,&#xd;
	&quot;educationalLevel&quot;:&quot;1&quot;,&#xd;
	&quot;isMarry&quot;:&quot;True&quot;,&#xd;
	&quot;isSmoking&quot;:&quot;False&quot;,&#xd;
	&quot;isDrink&quot;:&quot;False&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/personalinfosave</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="健康史列表" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/healthhistorylist</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="个人疾病史详情" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;hisCode&quot;:&quot;HIS-000001&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/healthhistorydetail</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="个人疾病史保存" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;questType&quot;:&quot;1&quot;,&#xd;
	&quot;hisCode&quot;:&quot;HIS-000001&quot;,&#xd;
	&quot;diseaseList&quot;:&#xd;
		[{&#xd;
			&quot;diseaseCode&quot;:&quot;DIS-000000014&quot;,&#xd;
			&quot;name&quot;:&quot;胃十二指肠溃疡&quot;&#xd;
		},&#xd;
		{&#xd;
			&quot;diseaseCode&quot;:&quot;DIS-000000015&quot;,&#xd;
			&quot;name&quot;:&quot;慢性胃肠炎&quot;&#xd;
		},&#xd;
		{&#xd;
			&quot;diseaseCode&quot;:&quot;DIS-000000020&quot;,&#xd;
			&quot;name&quot;:&quot;强直性脊柱炎&quot;&#xd;
		}],&#xd;
		&quot;isDisease&quot;:true&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/savehealthhistory</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="家族肿瘤史详情" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;hisCode&quot;:&quot;HIS-000002&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/healthhistorydetail</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="家族肿瘤史保存" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;questType&quot;:&quot;1&quot;,&#xd;
	&quot;hisCode&quot;:&quot;HIS-000002&quot;,&#xd;
	&quot;diseaseList&quot;:[],&#xd;
	&quot;isDisease&quot;:false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/savehealthhistory</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="我的检查记录" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;:&quot;thyroid&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/checkreportlist</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="添加检查报告" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/checkreportlist</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除检查报告" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{	&#xd;
	&quot;id&quot;: &quot;1&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/deletecheckreport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="建议与反馈提交" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suggest&quot;:&quot;啦咯啦咯啦咯&quot;,&#xd;
	&quot;contact&quot;:&quot;阿龙&quot;,&#xd;
	&quot;suggestList&quot;:&#xd;
		[{&#xd;
			&quot;pCode&quot;:&quot;medical&quot;,&#xd;
			&quot;questList&quot;:&#xd;
				[{&#xd;
					&quot;code&quot;:&quot;MS0001&quot;,&#xd;
					&quot;answerList&quot;:&#xd;
					[{&#xd;
						&quot;answer&quot;:&quot;1&quot;&#xd;
					}]},&#xd;
					{&#xd;
						&quot;code&quot;:&quot;MS0002&quot;,&#xd;
						&quot;answerList&quot;:&#xd;
						[{&#xd;
							&quot;answer&quot;:&quot;2&quot;&#xd;
						}]},&#xd;
						{&#xd;
							&quot;code&quot;:&quot;MS0003&quot;,&#xd;
							&quot;answerList&quot;:&#xd;
							[{&#xd;
								&quot;answer&quot;:&quot;2&quot;&#xd;
							}]&#xd;
						}&#xd;
					]&#xd;
			}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/savesuggest</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交甲状腺测试题-man" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;qaQuestList&quot;: [{&#xd;
		&quot;id&quot;: 1,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您的性别？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000001&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 1,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 1,&#xd;
			&quot;questId&quot;: 1,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;女性&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 2,&#xd;
			&quot;questId&quot;: 1,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;男性&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;&quot;,&#xd;
		&quot;isAnswerShow&quot;: false,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: false&#xd;
	}, {&#xd;
		&quot;id&quot;: 3,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您现在的身高（厘米）？&quot;,&#xd;
		&quot;subHead&quot;: &quot;请输入您的身高&quot;,&#xd;
		&quot;code&quot;: &quot;QL-000003&quot;,&#xd;
		&quot;questType&quot;: 3,&#xd;
		&quot;inputType&quot;: 1,&#xd;
		&quot;sortNo&quot;: 2,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;190&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 1,&#xd;
			&quot;questId&quot;: 3,&#xd;
			&quot;ruleType&quot;: 1,&#xd;
			&quot;ruleContent&quot;: &quot;^[1-9]*[1-9][0-9]*$&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;188&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 2,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您的年龄？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000002&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 3,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 3,&#xd;
			&quot;questId&quot;: 2,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;＜40岁&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 4,&#xd;
			&quot;questId&quot;: 2,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;40-49岁&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 5,&#xd;
			&quot;questId&quot;: 2,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;50-59岁&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 6,&#xd;
			&quot;questId&quot;: 2,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;60-69岁&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 7,&#xd;
			&quot;questId&quot;: 2,&#xd;
			&quot;key&quot;: &quot;E&quot;,&#xd;
			&quot;desc&quot;: &quot;≥70岁&quot;,&#xd;
			&quot;sortNo&quot;: 5,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;＜40岁&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 4,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您现在的体重（公斤）？&quot;,&#xd;
		&quot;subHead&quot;: &quot;请输入您的体重&quot;,&#xd;
		&quot;code&quot;: &quot;QL-000004&quot;,&#xd;
		&quot;questType&quot;: 3,&#xd;
		&quot;inputType&quot;: 2,&#xd;
		&quot;sortNo&quot;: 4,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;90&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 2,&#xd;
			&quot;questId&quot;: 4,&#xd;
			&quot;ruleType&quot;: 1,&#xd;
			&quot;ruleContent&quot;: &quot;^[1-9][0-9]*([.]{1}[0-9]+){0,1}$&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;68&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 5,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您生活的城市？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000005&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 5,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 8,&#xd;
			&quot;questId&quot;: 5,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;不相信眼泪的北、上、广、深&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 9,&#xd;
			&quot;questId&quot;: 5,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;省会、直辖市&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 10,&#xd;
			&quot;questId&quot;: 5,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;远离拥挤的三线城市&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 11,&#xd;
			&quot;questId&quot;: 5,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;美丽的小乡村&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;不相信眼泪的北、上、广、深&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 6,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您的文化程度？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000006&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 6,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 12,&#xd;
			&quot;questId&quot;: 6,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;大专、本科及以上&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 13,&#xd;
			&quot;questId&quot;: 6,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;高中或中专&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 14,&#xd;
			&quot;questId&quot;: 6,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;初中及以下&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;初中及以下&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 7,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您以前有得过甲状腺疾病吗？(可多选)&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000007&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 7,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 15,&#xd;
			&quot;questId&quot;: 7,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有得过甲状腺结节&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 16,&#xd;
			&quot;questId&quot;: 7,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;有得过甲状腺炎、甲亢、甲减、甲状腺腺瘤等至少其中一种&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 17,&#xd;
			&quot;questId&quot;: 7,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或者不知道&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 3,&#xd;
			&quot;questId&quot;: 7,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;C\&quot;,\&quot;B\&quot;: \&quot;C\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;有得过甲状腺结节&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 8,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您的亲属中有没有患甲状腺癌的？(可多选)&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000008&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 8,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 18,&#xd;
			&quot;questId&quot;: 8,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;父母、子女、兄弟姐妹&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 19,&#xd;
			&quot;questId&quot;: 8,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;叔、伯、姑、舅、姨、祖父母、外祖父母&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 20,&#xd;
			&quot;questId&quot;: 8,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或者不知道&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 4,&#xd;
			&quot;questId&quot;: 8,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;C\&quot;,\&quot;B\&quot;: \&quot;C\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;父母、子女、兄弟姐妹&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 9,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否经常（每周≥3次）吃以下食物？(可多选)&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000009&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 9,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 21,&#xd;
			&quot;questId&quot;: 9,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;海产类食物如：海鱼、海虾、海贝、海带、紫菜等&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 22,&#xd;
			&quot;questId&quot;: 9,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;泡菜、咸蛋、腊肉以及其他腌制品&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 23,&#xd;
			&quot;questId&quot;: 9,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;以上都没有&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 5,&#xd;
			&quot;questId&quot;: 9,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;C\&quot;,\&quot;B\&quot;: \&quot;C\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;以上都没有&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 10,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否有糖尿病或者血糖异常？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000010&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 10,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 24,&#xd;
			&quot;questId&quot;: 10,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 25,&#xd;
			&quot;questId&quot;: 10,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或者不知道&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;有&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 11,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否有血脂高（甘油三脂、胆固醇）？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000011&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 11,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 26,&#xd;
			&quot;questId&quot;: 11,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 27,&#xd;
			&quot;questId&quot;: 11,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或者不知道&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;有&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 12,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否曾经接受过头颈部CT检查？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000012&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 12,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 28,&#xd;
			&quot;questId&quot;: 12,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有，18岁之前接受过&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 29,&#xd;
			&quot;questId&quot;: 12,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;有，18岁之后接受过&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 30,&#xd;
			&quot;questId&quot;: 12,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或者不知道&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;有，18岁之前接受过&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 13,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否常常有以下情绪？(可多选)&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000013&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 13,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;D&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 31,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;容易烦恼或激动&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 32,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;爱生闷气&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 33,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;遇事不愿与人倾诉&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 34,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;处事态度悲观&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 35,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;key&quot;: &quot;E&quot;,&#xd;
			&quot;desc&quot;: &quot;我是乐天派，神马都是浮云&quot;,&#xd;
			&quot;sortNo&quot;: 5,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 6,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;E\&quot;,\&quot;B\&quot;: \&quot;E\&quot;,\&quot;C\&quot;: \&quot;E\&quot;,\&quot;D\&quot;: \&quot;E\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;处事态度悲观&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 14,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;在平常的生活、工作中，您有没有感觉到压力大、焦虑？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000014&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 14,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;C&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 36,&#xd;
			&quot;questId&quot;: 14,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有，经常觉得压力山大&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 38,&#xd;
			&quot;questId&quot;: 14,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;部分时间有&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 39,&#xd;
			&quot;questId&quot;: 14,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;偶尔有或没有&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;偶尔有或没有&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 15,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您与他人相处的时候，通常是什么样的状态？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000015&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 15,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 40,&#xd;
			&quot;questId&quot;: 15,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;擅长与人交往，相处融洽&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 41,&#xd;
			&quot;questId&quot;: 15,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;我有些特立独行，时不时地会与某些人有口角&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;我有些特立独行，时不时地会与某些人有口角&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 9999,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;维护自己的健康，除了关注身体健康之外，还应该为万一的疾病风险做好准备，您有兴趣了解应对疾病风险的保险吗？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000015&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 15,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 40,&#xd;
			&quot;questId&quot;: 15,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有兴趣&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 41,&#xd;
			&quot;questId&quot;: 15,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;没兴趣&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;有兴趣&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}],&#xd;
	&quot;existsEv&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">customer/qa/asynopersave</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交甲状腺测试题-woman" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;qaQuestList&quot;: [{&#xd;
		&quot;id&quot;: 1,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您的性别？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000001&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 1,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 1,&#xd;
			&quot;questId&quot;: 1,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;女性&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 2,&#xd;
			&quot;questId&quot;: 1,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;男性&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;&quot;,&#xd;
		&quot;isAnswerShow&quot;: false,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: false&#xd;
	}, {&#xd;
		&quot;id&quot;: 3,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您现在的身高（厘米）？&quot;,&#xd;
		&quot;subHead&quot;: &quot;请输入您的身高&quot;,&#xd;
		&quot;code&quot;: &quot;QL-000003&quot;,&#xd;
		&quot;questType&quot;: 3,&#xd;
		&quot;inputType&quot;: 1,&#xd;
		&quot;sortNo&quot;: 2,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;166&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 1,&#xd;
			&quot;questId&quot;: 3,&#xd;
			&quot;ruleType&quot;: 1,&#xd;
			&quot;ruleContent&quot;: &quot;^[1-9]*[1-9][0-9]*$&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;165&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 2,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您的年龄？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000002&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 3,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 3,&#xd;
			&quot;questId&quot;: 2,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;＜40岁&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 4,&#xd;
			&quot;questId&quot;: 2,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;40-49岁&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 5,&#xd;
			&quot;questId&quot;: 2,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;50-59岁&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 6,&#xd;
			&quot;questId&quot;: 2,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;60-69岁&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 7,&#xd;
			&quot;questId&quot;: 2,&#xd;
			&quot;key&quot;: &quot;E&quot;,&#xd;
			&quot;desc&quot;: &quot;≥70岁&quot;,&#xd;
			&quot;sortNo&quot;: 5,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;＜40岁&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 4,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您现在的体重（公斤）？&quot;,&#xd;
		&quot;subHead&quot;: &quot;请输入您的体重&quot;,&#xd;
		&quot;code&quot;: &quot;QL-000004&quot;,&#xd;
		&quot;questType&quot;: 3,&#xd;
		&quot;inputType&quot;: 2,&#xd;
		&quot;sortNo&quot;: 4,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;45&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 2,&#xd;
			&quot;questId&quot;: 4,&#xd;
			&quot;ruleType&quot;: 1,&#xd;
			&quot;ruleContent&quot;: &quot;^[1-9][0-9]*([.]{1}[0-9]+){0,1}$&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;45&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 5,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您生活的城市？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000005&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 5,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;D&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 8,&#xd;
			&quot;questId&quot;: 5,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;不相信眼泪的北、上、广、深&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 9,&#xd;
			&quot;questId&quot;: 5,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;省会、直辖市&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 10,&#xd;
			&quot;questId&quot;: 5,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;远离拥挤的三线城市&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 11,&#xd;
			&quot;questId&quot;: 5,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;美丽的小乡村&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;美丽的小乡村&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 6,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您的文化程度？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000006&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 6,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 12,&#xd;
			&quot;questId&quot;: 6,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;大专、本科及以上&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 13,&#xd;
			&quot;questId&quot;: 6,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;高中或中专&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 14,&#xd;
			&quot;questId&quot;: 6,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;初中及以下&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;大专、本科及以上&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 7,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您以前有得过甲状腺疾病吗？(可多选)&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000007&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 7,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 15,&#xd;
			&quot;questId&quot;: 7,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有得过甲状腺结节&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 16,&#xd;
			&quot;questId&quot;: 7,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;有得过甲状腺炎、甲亢、甲减、甲状腺腺瘤等至少其中一种&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 17,&#xd;
			&quot;questId&quot;: 7,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或者不知道&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 3,&#xd;
			&quot;questId&quot;: 7,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;C\&quot;,\&quot;B\&quot;: \&quot;C\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;没有或者不知道&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 8,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您的亲属中有没有患甲状腺癌的？(可多选)&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000008&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 8,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 18,&#xd;
			&quot;questId&quot;: 8,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;父母、子女、兄弟姐妹&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 19,&#xd;
			&quot;questId&quot;: 8,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;叔、伯、姑、舅、姨、祖父母、外祖父母&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 20,&#xd;
			&quot;questId&quot;: 8,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或者不知道&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 4,&#xd;
			&quot;questId&quot;: 8,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;C\&quot;,\&quot;B\&quot;: \&quot;C\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;叔、伯、姑、舅、姨、祖父母、外祖父母&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 9,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否经常（每周≥3次）吃以下食物？(可多选)&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000009&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 9,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;C&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 21,&#xd;
			&quot;questId&quot;: 9,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;海产类食物如：海鱼、海虾、海贝、海带、紫菜等&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 22,&#xd;
			&quot;questId&quot;: 9,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;泡菜、咸蛋、腊肉以及其他腌制品&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 23,&#xd;
			&quot;questId&quot;: 9,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;以上都没有&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 5,&#xd;
			&quot;questId&quot;: 9,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;C\&quot;,\&quot;B\&quot;: \&quot;C\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;以上都没有&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 10,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否有糖尿病或者血糖异常？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000010&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 10,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 24,&#xd;
			&quot;questId&quot;: 10,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 25,&#xd;
			&quot;questId&quot;: 10,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或者不知道&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;没有或者不知道&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 11,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否有血脂高（甘油三脂、胆固醇）？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000011&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 11,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 26,&#xd;
			&quot;questId&quot;: 11,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 27,&#xd;
			&quot;questId&quot;: 11,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或者不知道&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;没有或者不知道&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 12,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否曾经接受过头颈部CT检查？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000012&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 12,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;C&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 28,&#xd;
			&quot;questId&quot;: 12,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有，18岁之前接受过&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 29,&#xd;
			&quot;questId&quot;: 12,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;有，18岁之后接受过&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 30,&#xd;
			&quot;questId&quot;: 12,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或者不知道&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;没有或者不知道&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 13,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否常常有以下情绪？(可多选)&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000013&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 13,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;E&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 31,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;容易烦恼或激动&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 32,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;爱生闷气&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 33,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;遇事不愿与人倾诉&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 34,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;处事态度悲观&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 35,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;key&quot;: &quot;E&quot;,&#xd;
			&quot;desc&quot;: &quot;我是乐天派，神马都是浮云&quot;,&#xd;
			&quot;sortNo&quot;: 5,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 6,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;E\&quot;,\&quot;B\&quot;: \&quot;E\&quot;,\&quot;C\&quot;: \&quot;E\&quot;,\&quot;D\&quot;: \&quot;E\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;我是乐天派，神马都是浮云&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 14,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;在平常的生活、工作中，您有没有感觉到压力大、焦虑？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000014&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 14,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 36,&#xd;
			&quot;questId&quot;: 14,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有，经常觉得压力山大&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 38,&#xd;
			&quot;questId&quot;: 14,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;部分时间有&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 39,&#xd;
			&quot;questId&quot;: 14,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;偶尔有或没有&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;部分时间有&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 15,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您与他人相处的时候，通常是什么样的状态？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000015&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 15,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 40,&#xd;
			&quot;questId&quot;: 15,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;擅长与人交往，相处融洽&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 41,&#xd;
			&quot;questId&quot;: 15,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;我有些特立独行，时不时地会与某些人有口角&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;擅长与人交往，相处融洽&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 16,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否曾经怀孕次数达3次以上？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000016&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 16,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 42,&#xd;
			&quot;questId&quot;: 16,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;是（＞3次）&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 43,&#xd;
			&quot;questId&quot;: 16,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;否（≤3次）&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;否（≤3次）&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 17,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您的初潮年龄是多少岁？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000017&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 17,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 44,&#xd;
			&quot;questId&quot;: 17,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;＜14岁&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 45,&#xd;
			&quot;questId&quot;: 17,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;≥14岁&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;＜14岁&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 18,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否患有乳腺增生？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000018&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 18,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 46,&#xd;
			&quot;questId&quot;: 18,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;是&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 47,&#xd;
			&quot;questId&quot;: 18,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;否&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;是&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 9999,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;维护自己的健康，除了关注身体健康之外，还应该为万一的疾病风险做好准备，您有兴趣了解应对疾病风险的保险吗？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000015&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 15,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 40,&#xd;
			&quot;questId&quot;: 15,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有兴趣&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 41,&#xd;
			&quot;questId&quot;: 15,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;没兴趣&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;没兴趣&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}],&#xd;
	&quot;existsEv&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">customer/qa/asynopersave</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询个人信息(电子档案)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/personalinfodetail</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="风险测评报告(电子健康档案)" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/riskevaluationresult</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="问卷测评列表" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;:&quot;thyroid&quot;	&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/user/qaEvaluationList</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询最新问卷测评结果" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;:&quot;74655&quot;	&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/qa/result/current</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="B超测评列表" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;isOwner&quot;:false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/diagnose/resultlist</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="B超结果详情" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;:&quot;59921&quot;	&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/diagnose/resultid</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="乳腺问卷接口" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询已测评人数" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;: &quot;mammaryGland&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/customer/ev/count</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询测评限制" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;: &quot;mammaryGland&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/customer/ev/restrict</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">restrict</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.restrict</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="未做过乳腺测评" enabled="false">
          <stringProp name="IfController.condition">${restrict} == true</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取乳腺测试题-男性" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;: &quot;mammaryGland&quot;,&#xd;
	&quot;sex&quot;: 1&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/customer/qa/operlist</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1019197760">&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取乳腺测试题-女性" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;: &quot;mammaryGland&quot;,&#xd;
	&quot;sex&quot;: 2&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/customer/qa/operlist</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1019197760">&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取题目id" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交乳腺测试题-女性" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: ${id},&#xd;
	&quot;qaQuestList&quot;: [{&#xd;
		&quot;id&quot;: 21,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您的性别？&quot;,&#xd;
		&quot;subHead&quot;: &quot;&quot;,&#xd;
		&quot;code&quot;: &quot;QL-000101&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 1,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 48,&#xd;
			&quot;questId&quot;: 21,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;男性&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 49,&#xd;
			&quot;questId&quot;: 21,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;女性&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;&quot;,&#xd;
		&quot;isAnswerShow&quot;: false,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: false&#xd;
	}, {&#xd;
		&quot;id&quot;: 22,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您的年龄？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000102&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 2,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;D&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 50,&#xd;
			&quot;questId&quot;: 22,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;＜30岁&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 51,&#xd;
			&quot;questId&quot;: 22,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;30-39岁&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 52,&#xd;
			&quot;questId&quot;: 22,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;40-49岁&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 53,&#xd;
			&quot;questId&quot;: 22,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;50-59岁&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 54,&#xd;
			&quot;questId&quot;: 22,&#xd;
			&quot;key&quot;: &quot;E&quot;,&#xd;
			&quot;desc&quot;: &quot;≥60岁&quot;,&#xd;
			&quot;sortNo&quot;: 5,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;50-59岁&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 23,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您的文化程度？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000103&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 3,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;C&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 55,&#xd;
			&quot;questId&quot;: 23,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;初中及以下&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 56,&#xd;
			&quot;questId&quot;: 23,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;高中或中专&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 57,&#xd;
			&quot;questId&quot;: 23,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;大专、本科及以上&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;大专、本科及以上&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 24,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您现在的身高（厘米）？&quot;,&#xd;
		&quot;subHead&quot;: &quot;请输入您的身高&quot;,&#xd;
		&quot;code&quot;: &quot;QL-000104&quot;,&#xd;
		&quot;questType&quot;: 3,&#xd;
		&quot;inputType&quot;: 2,&#xd;
		&quot;sortNo&quot;: 4,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;169&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 7,&#xd;
			&quot;questId&quot;: 24,&#xd;
			&quot;ruleType&quot;: 1,&#xd;
			&quot;ruleContent&quot;: &quot;^[1-9]*[1-9][0-9]*$&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;169&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 25,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您现在的体重（公斤）？&quot;,&#xd;
		&quot;subHead&quot;: &quot;请输入您的体重&quot;,&#xd;
		&quot;code&quot;: &quot;QL-000105&quot;,&#xd;
		&quot;questType&quot;: 3,&#xd;
		&quot;inputType&quot;: 2,&#xd;
		&quot;sortNo&quot;: 5,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;80&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 8,&#xd;
			&quot;questId&quot;: 25,&#xd;
			&quot;ruleType&quot;: 1,&#xd;
			&quot;ruleContent&quot;: &quot;^[1-9][0-9]*([.]{1}[0-9]+){0,1}$&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;80&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 26,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您有患过乳腺良性疾病吗？(如：乳腺增生)&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000106&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 6,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 58,&#xd;
			&quot;questId&quot;: 26,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有，未做手术&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 59,&#xd;
			&quot;questId&quot;: 26,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;有，已做手术，检查结果为良性&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 60,&#xd;
			&quot;questId&quot;: 26,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或不清楚&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;有，已做手术，检查结果为良性&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 27,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您的亲属中有患乳腺良性疾病的吗？(如：乳腺增生)（可多选）&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000107&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 7,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;A,B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 61,&#xd;
			&quot;questId&quot;: 27,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;父母或子女或兄弟姐妹患有&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 62,&#xd;
			&quot;questId&quot;: 27,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;叔伯、姨姑舅、祖父母、外祖父母患有&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 63,&#xd;
			&quot;questId&quot;: 27,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或不知道&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 9,&#xd;
			&quot;questId&quot;: 27,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;C\&quot;,\&quot;B\&quot;: \&quot;C\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1558591101000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2019-05-23 13:58:21&quot;&#xd;
		}],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;父母或子女或兄弟姐妹患有；叔伯、姨姑舅、祖父母、外祖父母患有&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 28,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您的亲属中有得乳腺癌的吗？（可多选）&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000108&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 8,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;A,B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 64,&#xd;
			&quot;questId&quot;: 28,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;父母或子女或兄弟姐妹患有&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 65,&#xd;
			&quot;questId&quot;: 28,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;叔伯、姨姑舅、祖父母、外祖父母患有&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 66,&#xd;
			&quot;questId&quot;: 28,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或不知道&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 10,&#xd;
			&quot;questId&quot;: 28,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;C\&quot;,\&quot;B\&quot;: \&quot;C\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1558591101000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2019-05-23 13:58:21&quot;&#xd;
		}],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;父母或子女或兄弟姐妹患有；叔伯、姨姑舅、祖父母、外祖父母患有&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 29,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;和您有血缘关系的亲属中有得过其他癌症的吗（除乳腺癌外）？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000109&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 9,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 67,&#xd;
			&quot;questId&quot;: 29,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 68,&#xd;
			&quot;questId&quot;: 29,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或不知道&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;有&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 30,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您首次月经是什么时候？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000110&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 10,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 69,&#xd;
			&quot;questId&quot;: 30,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;&lt;14岁&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 70,&#xd;
			&quot;questId&quot;: 30,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;≥14岁&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 71,&#xd;
			&quot;questId&quot;: 30,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;本宝宝还没有来月经&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;mammaryRuleList&quot;: [{&#xd;
			&quot;id&quot;: 2,&#xd;
			&quot;questId&quot;: 30,&#xd;
			&quot;ruleType&quot;: 1,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;ruleContent&quot;: &quot;QL-000111,QL-000112,QL-000113,QL-000114&quot;,&#xd;
			&quot;sortNo&quot;: 0,&#xd;
			&quot;createTime&quot;: 1558509810000&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;&lt;14岁&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 31,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您的月经规律吗？（可多选）&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000111&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 11,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;A,B,C&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 72,&#xd;
			&quot;questId&quot;: 31,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;月经周期延长或缩短（7天以上）&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 73,&#xd;
			&quot;questId&quot;: 31,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;经期持续时间延长（7天以上）&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 74,&#xd;
			&quot;questId&quot;: 31,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;经量有时候很多，有时候很少&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 75,&#xd;
			&quot;questId&quot;: 31,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;大多数情况规律，偶尔不规律&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 11,&#xd;
			&quot;questId&quot;: 31,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;D\&quot;,\&quot;B\&quot;: \&quot;D\&quot;,\&quot;C\&quot;: \&quot;D\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1558591101000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2019-05-23 13:58:21&quot;&#xd;
		}],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;月经周期延长或缩短（7天以上）；经期持续时间延长（7天以上）；经量有时候很多，有时候很少&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 32,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您有过流产经历吗？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000112&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 12,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 76,&#xd;
			&quot;questId&quot;: 32,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有过1~2次自然或人工流产经历&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 77,&#xd;
			&quot;questId&quot;: 32,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;有过3次及以上自然或人工流产经历&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 78,&#xd;
			&quot;questId&quot;: 32,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;额，这个问题问得太突然啦，人家还是个“宝宝”&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;有过3次及以上自然或人工流产经历&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 34,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您有吃过避孕药吗？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000113&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 13,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;D&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 82,&#xd;
			&quot;questId&quot;: 34,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;偶尔服用过一两次&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 83,&#xd;
			&quot;questId&quot;: 34,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;最近一个月或者目前正在服用&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 84,&#xd;
			&quot;questId&quot;: 34,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;服用避孕药1~5年（正在服用或已停用）&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 85,&#xd;
			&quot;questId&quot;: 34,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;服用避孕药5年以上（正在服用或已停用）&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 86,&#xd;
			&quot;questId&quot;: 34,&#xd;
			&quot;key&quot;: &quot;E&quot;,&#xd;
			&quot;desc&quot;: &quot;从来没有&quot;,&#xd;
			&quot;sortNo&quot;: 5,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;服用避孕药5年以上（正在服用或已停用）&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 33,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您第一次生孩子是在什么时候呢？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000114&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 14,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 79,&#xd;
			&quot;questId&quot;: 33,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;30岁之前&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 80,&#xd;
			&quot;questId&quot;: 33,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;30岁及以上&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 81,&#xd;
			&quot;questId&quot;: 33,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;哼！人家还是小公举呢&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;30岁及以上&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 35,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您的性格属于？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000115&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 15,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;C&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 87,&#xd;
			&quot;questId&quot;: 35,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;外向型，能够很快融入到新的圈子&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 88,&#xd;
			&quot;questId&quot;: 35,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;慢热型，相处久了你会发现不一样的我&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 89,&#xd;
			&quot;questId&quot;: 35,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;内向型，不善于交际&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;内向型，不善于交际&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 36,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您的睡眠质量怎么样？（可多选）&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000116&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 16,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;A,B,C&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 90,&#xd;
			&quot;questId&quot;: 36,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;难以入睡，一天睡眠时间低于5小时&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 91,&#xd;
			&quot;questId&quot;: 36,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;经常做梦，睡醒后很疲劳&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 92,&#xd;
			&quot;questId&quot;: 36,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;很容易醒，醒了之后很难再入睡&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 93,&#xd;
			&quot;questId&quot;: 36,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;我感觉我的睡眠质量还不错&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 12,&#xd;
			&quot;questId&quot;: 36,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;D\&quot;,\&quot;B\&quot;: \&quot;D\&quot;,\&quot;C\&quot;: \&quot;D\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1558591101000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2019-05-23 13:58:21&quot;&#xd;
		}],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;我感觉我的睡眠质量还不错&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 37,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您有以下饮食习惯吗？（可多选）&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000117&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 17,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;A,B,C&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 94,&#xd;
			&quot;questId&quot;: 37,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;经常（每周≥3次）吃披萨、汉堡、油炸、烧烤等食物&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 95,&#xd;
			&quot;questId&quot;: 37,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;基本每餐吃肉为主，不吃或少吃蔬菜&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 96,&#xd;
			&quot;questId&quot;: 37,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;经常（每周≥3次）吃巧克力、冰淇淋、糖果等甜食&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 97,&#xd;
			&quot;questId&quot;: 37,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;正常饮食，荤食搭配&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 13,&#xd;
			&quot;questId&quot;: 37,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;D\&quot;,\&quot;B\&quot;: \&quot;D\&quot;,\&quot;C\&quot;: \&quot;D\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1558591101000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2019-05-23 13:58:21&quot;&#xd;
		}],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;经常（每周≥3次）吃披萨、汉堡、油炸、烧烤等食物；基本每餐吃肉为主，不吃或少吃蔬菜；经常（每周≥3次）吃巧克力、冰淇淋、糖果等甜食&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 38,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您有以下生活习惯吗？（可多选）&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000118&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 18,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;A,B,C&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 98,&#xd;
			&quot;questId&quot;: 38,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;睡觉时不脱文胸&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 99,&#xd;
			&quot;questId&quot;: 38,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;长期穿坚硬的文胸&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 100,&#xd;
			&quot;questId&quot;: 38,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;戴比较紧的文胸或者文胸肩带比较紧&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 101,&#xd;
			&quot;questId&quot;: 38,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;以上都没有&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 14,&#xd;
			&quot;questId&quot;: 38,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;D\&quot;,\&quot;B\&quot;: \&quot;D\&quot;,\&quot;C\&quot;: \&quot;D\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1558591101000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2019-05-23 13:58:21&quot;&#xd;
		}],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;睡觉时不脱文胸；长期穿坚硬的文胸；戴比较紧的文胸或者文胸肩带比较紧&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 39,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您吸烟吗？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000119&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 19,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 102,&#xd;
			&quot;questId&quot;: 39,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;我连续抽烟10年以上&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 103,&#xd;
			&quot;questId&quot;: 39,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;我连续抽烟10年及以下&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 104,&#xd;
			&quot;questId&quot;: 39,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;香烟有害健康，我不抽烟&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;我连续抽烟10年以上&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 40,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;您身边有人经常吸烟吗？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000120&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 20,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 105,&#xd;
			&quot;questId&quot;: 40,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;我连续吸二手烟10年以上&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 106,&#xd;
			&quot;questId&quot;: 40,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;我连续吸二手烟10年及以下&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 107,&#xd;
			&quot;questId&quot;: 40,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;我身边偶尔有或没有人吸烟&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;我连续吸二手烟10年以上&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 41,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;在平时生活和工作中，您是否觉得压力大？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000121&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 21,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 108,&#xd;
			&quot;questId&quot;: 41,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;经常觉得压力山大&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 109,&#xd;
			&quot;questId&quot;: 41,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;偶尔会觉得有压力&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 110,&#xd;
			&quot;questId&quot;: 41,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;没什么压力&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;经常觉得压力山大&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 43,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;近一年内，您有遇到以下这些事情吗？（可多选）&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000122&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 22,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;A,B,C,D,E&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 114,&#xd;
			&quot;questId&quot;: 43,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;家庭生活不和谐、经常吵架&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 115,&#xd;
			&quot;questId&quot;: 43,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;亲人去世&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 116,&#xd;
			&quot;questId&quot;: 43,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;失恋或离异&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 117,&#xd;
			&quot;questId&quot;: 43,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;创业失败或破产&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 118,&#xd;
			&quot;questId&quot;: 43,&#xd;
			&quot;key&quot;: &quot;E&quot;,&#xd;
			&quot;desc&quot;: &quot;长期精神压抑&quot;,&#xd;
			&quot;sortNo&quot;: 5,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 119,&#xd;
			&quot;questId&quot;: 43,&#xd;
			&quot;key&quot;: &quot;F&quot;,&#xd;
			&quot;desc&quot;: &quot;以上都没有&quot;,&#xd;
			&quot;sortNo&quot;: 6,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 15,&#xd;
			&quot;questId&quot;: 43,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;F\&quot;,\&quot;B\&quot;: \&quot;F\&quot;,\&quot;C\&quot;: \&quot;F\&quot;,\&quot;D\&quot;: \&quot;F\&quot;,\&quot;E\&quot;: \&quot;F\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1558591101000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2019-05-23 13:58:21&quot;&#xd;
		}],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;家庭生活不和谐、经常吵架；亲人去世；失恋或离异；创业失败或破产；长期精神压抑&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 42,&#xd;
		&quot;qpId&quot;: 2,&#xd;
		&quot;question&quot;: &quot;工作中，您有长期接触以下物质吗？（可多选）&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000123&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 23,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 2,&#xd;
		&quot;answer&quot;: &quot;A,B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 111,&#xd;
			&quot;questId&quot;: 42,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;甲苯、甲醛、氯气、农药、橡胶等化学物质&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 112,&#xd;
			&quot;questId&quot;: 42,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;CT、X光等有放射性的设备&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 113,&#xd;
			&quot;questId&quot;: 42,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;以上都没有&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 16,&#xd;
			&quot;questId&quot;: 42,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;C\&quot;,\&quot;B\&quot;: \&quot;C\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1558591101000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2019-05-23 13:58:21&quot;&#xd;
		}],&#xd;
		&quot;mammaryRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;甲苯、甲醛、氯气、农药、橡胶等化学物质；CT、X光等有放射性的设备&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/customer/qa/opersave</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1019197760">&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询最新测评结果-乳腺" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;: &quot;mammaryGland&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/customer/qa/result/current</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="中英活动-新" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">10</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="抽奖信息提交" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
 &quot;lotteryCode&quot;: &quot;ZY0002L&quot;,&#xd;
 &quot;channelCode&quot;: &quot;avivaagent&quot;,&#xd;
 &quot;userName&quot;: &quot;cathy&quot;,&#xd;
 &quot;phoneNo&quot;: &quot;13000000000&quot;,&#xd;
 &quot;verCode&quot;: &quot;fdf&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/customer/lottery/userinfo</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询抽奖结果" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;lotteryCode&quot;: &quot;ZY0002L&quot;,&#xd;
	&quot;channelCode&quot;: &quot;avivaagent&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/customer/lottery/listprize</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="中英活动-第一次" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交甲状腺测试题-woman" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;qaQuestList&quot;: [{&#xd;
		&quot;id&quot;: 1,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您的性别？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000001&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 1,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 1,&#xd;
			&quot;questId&quot;: 1,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;女性&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 2,&#xd;
			&quot;questId&quot;: 1,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;男性&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;&quot;,&#xd;
		&quot;isAnswerShow&quot;: false,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: false&#xd;
	}, {&#xd;
		&quot;id&quot;: 3,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您现在的身高（厘米）？&quot;,&#xd;
		&quot;subHead&quot;: &quot;请输入您的身高&quot;,&#xd;
		&quot;code&quot;: &quot;QL-000003&quot;,&#xd;
		&quot;questType&quot;: 3,&#xd;
		&quot;inputType&quot;: 1,&#xd;
		&quot;sortNo&quot;: 2,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;166&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 1,&#xd;
			&quot;questId&quot;: 3,&#xd;
			&quot;ruleType&quot;: 1,&#xd;
			&quot;ruleContent&quot;: &quot;^[1-9]*[1-9][0-9]*$&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;165&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 2,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您的年龄？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000002&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 3,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 3,&#xd;
			&quot;questId&quot;: 2,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;＜40岁&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 4,&#xd;
			&quot;questId&quot;: 2,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;40-49岁&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 5,&#xd;
			&quot;questId&quot;: 2,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;50-59岁&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 6,&#xd;
			&quot;questId&quot;: 2,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;60-69岁&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 7,&#xd;
			&quot;questId&quot;: 2,&#xd;
			&quot;key&quot;: &quot;E&quot;,&#xd;
			&quot;desc&quot;: &quot;≥70岁&quot;,&#xd;
			&quot;sortNo&quot;: 5,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;＜40岁&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 4,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您现在的体重（公斤）？&quot;,&#xd;
		&quot;subHead&quot;: &quot;请输入您的体重&quot;,&#xd;
		&quot;code&quot;: &quot;QL-000004&quot;,&#xd;
		&quot;questType&quot;: 3,&#xd;
		&quot;inputType&quot;: 2,&#xd;
		&quot;sortNo&quot;: 4,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;45&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 2,&#xd;
			&quot;questId&quot;: 4,&#xd;
			&quot;ruleType&quot;: 1,&#xd;
			&quot;ruleContent&quot;: &quot;^[1-9][0-9]*([.]{1}[0-9]+){0,1}$&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;45&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 5,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您生活的城市？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000005&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 5,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;D&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 8,&#xd;
			&quot;questId&quot;: 5,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;不相信眼泪的北、上、广、深&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 9,&#xd;
			&quot;questId&quot;: 5,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;省会、直辖市&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 10,&#xd;
			&quot;questId&quot;: 5,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;远离拥挤的三线城市&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 11,&#xd;
			&quot;questId&quot;: 5,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;美丽的小乡村&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;美丽的小乡村&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 6,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您的文化程度？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000006&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 6,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 12,&#xd;
			&quot;questId&quot;: 6,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;大专、本科及以上&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 13,&#xd;
			&quot;questId&quot;: 6,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;高中或中专&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 14,&#xd;
			&quot;questId&quot;: 6,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;初中及以下&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;大专、本科及以上&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 7,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您以前有得过甲状腺疾病吗？(可多选)&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000007&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 7,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 15,&#xd;
			&quot;questId&quot;: 7,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有得过甲状腺结节&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 16,&#xd;
			&quot;questId&quot;: 7,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;有得过甲状腺炎、甲亢、甲减、甲状腺腺瘤等至少其中一种&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 17,&#xd;
			&quot;questId&quot;: 7,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或者不知道&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 3,&#xd;
			&quot;questId&quot;: 7,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;C\&quot;,\&quot;B\&quot;: \&quot;C\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;没有或者不知道&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 8,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您的亲属中有没有患甲状腺癌的？(可多选)&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000008&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 8,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 18,&#xd;
			&quot;questId&quot;: 8,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;父母、子女、兄弟姐妹&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 19,&#xd;
			&quot;questId&quot;: 8,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;叔、伯、姑、舅、姨、祖父母、外祖父母&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 20,&#xd;
			&quot;questId&quot;: 8,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或者不知道&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 4,&#xd;
			&quot;questId&quot;: 8,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;C\&quot;,\&quot;B\&quot;: \&quot;C\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;叔、伯、姑、舅、姨、祖父母、外祖父母&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 9,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否经常（每周≥3次）吃以下食物？(可多选)&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000009&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 9,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;C&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 21,&#xd;
			&quot;questId&quot;: 9,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;海产类食物如：海鱼、海虾、海贝、海带、紫菜等&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 22,&#xd;
			&quot;questId&quot;: 9,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;泡菜、咸蛋、腊肉以及其他腌制品&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 23,&#xd;
			&quot;questId&quot;: 9,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;以上都没有&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 5,&#xd;
			&quot;questId&quot;: 9,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;C\&quot;,\&quot;B\&quot;: \&quot;C\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;以上都没有&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 10,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否有糖尿病或者血糖异常？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000010&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 10,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 24,&#xd;
			&quot;questId&quot;: 10,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 25,&#xd;
			&quot;questId&quot;: 10,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或者不知道&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;没有或者不知道&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 11,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否有血脂高（甘油三脂、胆固醇）？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000011&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 11,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 26,&#xd;
			&quot;questId&quot;: 11,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 27,&#xd;
			&quot;questId&quot;: 11,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或者不知道&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;没有或者不知道&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 12,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否曾经接受过头颈部CT检查？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000012&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 12,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;C&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 28,&#xd;
			&quot;questId&quot;: 12,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有，18岁之前接受过&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 29,&#xd;
			&quot;questId&quot;: 12,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;有，18岁之后接受过&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 30,&#xd;
			&quot;questId&quot;: 12,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;没有或者不知道&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;没有或者不知道&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 13,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否常常有以下情绪？(可多选)&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000013&quot;,&#xd;
		&quot;questType&quot;: 2,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 13,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;E&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 31,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;容易烦恼或激动&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 32,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;爱生闷气&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 33,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;遇事不愿与人倾诉&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 34,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;key&quot;: &quot;D&quot;,&#xd;
			&quot;desc&quot;: &quot;处事态度悲观&quot;,&#xd;
			&quot;sortNo&quot;: 4,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 35,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;key&quot;: &quot;E&quot;,&#xd;
			&quot;desc&quot;: &quot;我是乐天派，神马都是浮云&quot;,&#xd;
			&quot;sortNo&quot;: 5,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [{&#xd;
			&quot;id&quot;: 6,&#xd;
			&quot;questId&quot;: 13,&#xd;
			&quot;ruleType&quot;: 2,&#xd;
			&quot;ruleContent&quot;: &quot;{\&quot;A\&quot;: \&quot;E\&quot;,\&quot;B\&quot;: \&quot;E\&quot;,\&quot;C\&quot;: \&quot;E\&quot;,\&quot;D\&quot;: \&quot;E\&quot;}&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540459772000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 17:29:32&quot;&#xd;
		}],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;我是乐天派，神马都是浮云&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 14,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;在平常的生活、工作中，您有没有感觉到压力大、焦虑？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000014&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 14,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 36,&#xd;
			&quot;questId&quot;: 14,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有，经常觉得压力山大&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 38,&#xd;
			&quot;questId&quot;: 14,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;部分时间有&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 39,&#xd;
			&quot;questId&quot;: 14,&#xd;
			&quot;key&quot;: &quot;C&quot;,&#xd;
			&quot;desc&quot;: &quot;偶尔有或没有&quot;,&#xd;
			&quot;sortNo&quot;: 3,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;部分时间有&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 15,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您与他人相处的时候，通常是什么样的状态？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000015&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 15,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 40,&#xd;
			&quot;questId&quot;: 15,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;擅长与人交往，相处融洽&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 41,&#xd;
			&quot;questId&quot;: 15,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;我有些特立独行，时不时地会与某些人有口角&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;擅长与人交往，相处融洽&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 16,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否曾经怀孕次数达3次以上？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000016&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 16,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 42,&#xd;
			&quot;questId&quot;: 16,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;是（＞3次）&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 43,&#xd;
			&quot;questId&quot;: 16,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;否（≤3次）&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;否（≤3次）&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 17,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您的初潮年龄是多少岁？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000017&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 17,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 44,&#xd;
			&quot;questId&quot;: 17,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;＜14岁&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 45,&#xd;
			&quot;questId&quot;: 17,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;≥14岁&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;＜14岁&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 18,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;您是否患有乳腺增生？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000018&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 18,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;A&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 46,&#xd;
			&quot;questId&quot;: 18,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;是&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}, {&#xd;
			&quot;id&quot;: 47,&#xd;
			&quot;questId&quot;: 18,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;否&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;是&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}, {&#xd;
		&quot;id&quot;: 9999,&#xd;
		&quot;qpId&quot;: 1,&#xd;
		&quot;question&quot;: &quot;维护自己的健康，除了关注身体健康之外，还应该为万一的疾病风险做好准备，您有兴趣了解应对疾病风险的保险吗？&quot;,&#xd;
		&quot;subHead&quot;: null,&#xd;
		&quot;code&quot;: &quot;QL-000015&quot;,&#xd;
		&quot;questType&quot;: 1,&#xd;
		&quot;inputType&quot;: 3,&#xd;
		&quot;sortNo&quot;: 15,&#xd;
		&quot;createTime&quot;: 1540456151000,&#xd;
		&quot;epId&quot;: 1,&#xd;
		&quot;answer&quot;: &quot;B&quot;,&#xd;
		&quot;qaQuestOptionList&quot;: [{&#xd;
			&quot;id&quot;: 40,&#xd;
			&quot;questId&quot;: 15,&#xd;
			&quot;key&quot;: &quot;A&quot;,&#xd;
			&quot;desc&quot;: &quot;有兴趣&quot;,&#xd;
			&quot;sortNo&quot;: 1,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: false&#xd;
		}, {&#xd;
			&quot;id&quot;: 41,&#xd;
			&quot;questId&quot;: 15,&#xd;
			&quot;key&quot;: &quot;B&quot;,&#xd;
			&quot;desc&quot;: &quot;没兴趣&quot;,&#xd;
			&quot;sortNo&quot;: 2,&#xd;
			&quot;createTime&quot;: 1540456216000,&#xd;
			&quot;createTimeDesc&quot;: &quot;2018-10-25 16:30:16&quot;,&#xd;
			&quot;isSelected&quot;: true&#xd;
		}],&#xd;
		&quot;qaQuestRuleList&quot;: [],&#xd;
		&quot;createTimeDesc&quot;: &quot;2018-10-25 16:29:11&quot;,&#xd;
		&quot;display&quot;: &quot;没兴趣&quot;,&#xd;
		&quot;isAnswerShow&quot;: true,&#xd;
		&quot;isOptionShow&quot;: false,&#xd;
		&quot;isTopicShow&quot;: true&#xd;
	}],&#xd;
	&quot;existsEv&quot;: false&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">customer/qa/asynopersave</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="填写抽奖信息" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;channelCode&quot;:&quot;avivaagent&quot;,&#xd;
	&quot;cityCode&quot;:440100,&#xd;
	&quot;lotteryCode&quot;:&quot;ZY0001L&quot;,&#xd;
	&quot;phoneNo&quot;:13000000000,&#xd;
	&quot;userName&quot;:&quot;yoyo&quot;,&#xd;
	&quot;verCode&quot;:&quot;2485&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/customer/lottery/userinfo</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询抽奖结果" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	 &quot;lotteryCode&quot;: &quot;ZY0001L&quot;,&#xd;
	 &quot;channelCode&quot;: &quot;avivaagent&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/customer/lottery/listprize</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="人保测试" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">60</stringProp>
        <stringProp name="ThreadGroup.delay">2</stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取七牛token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/business/rb/getQiNiuToken</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取七牛token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">qiNiuToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.qiNiuToken</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取code" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">ccode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果拿到七牛token" enabled="true">
          <stringProp name="IfController.condition">${ccode}==&quot;0000&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${base64}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">upload-z2.qiniup.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/putb64/-1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">UpToken ${qiNiuToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="把图片转换成base64" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.image.util.*;

String code = ImageUtil.base64(&quot;D:/images/TR3.jpg&quot;);
vars.put(&quot;base64&quot;,code);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取imageurl" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">imgUrl</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.key</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报告" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;imgUrl&quot;:&quot;${imgUrl}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/business/rb/test</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取code" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">code</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="提交报告成功" enabled="true">
          <stringProp name="IfController.condition">${code}==&quot;0000&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看结果" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;:&quot;${id}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/business/rb/query</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1019197760">&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="获取测试题" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">30</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取甲状腺测试题-女性" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;: &quot;thyroid&quot;,&#xd;
	&quot;sex&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/customer/qa/operlist</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取题目id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="人保测试-循环" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">60</stringProp>
        <stringProp name="ThreadGroup.delay">2</stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="图片地址参数化" enabled="true">
          <stringProp name="filename">C:\Users\Cathy\Desktop\image.txt</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">image</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取七牛token" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/business/rb/getQiNiuToken</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取七牛token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">qiNiuToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.qiNiuToken</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取code" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">ccode</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="如果拿到七牛token" enabled="true">
          <stringProp name="IfController.condition">${ccode}==&quot;0000&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="-1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${base64}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">upload-z2.qiniup.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/putb64/-1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">UpToken ${qiNiuToken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/octet-stream</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="把图片转换成base64" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.image.util.*;

String code = ImageUtil.base64(&quot;${image}&quot;);
log.info(&quot;image:&quot;+&quot;${image}&quot;);
vars.put(&quot;base64&quot;,code);


</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取imageurl" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">imgUrl</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.key</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="提交报告" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;imgUrl&quot;:&quot;${imgUrl}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/business/rb/test</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1019197760">&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取code" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">code</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.code</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="提交报告成功" enabled="true">
          <stringProp name="IfController.condition">${code}==&quot;0000&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查看结果" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;:&quot;${id}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/business/rb/query</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1019197760">&quot;0000&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="聚合报告" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP请求" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">open.weixin.qq.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/connect/oauth2/authorize?appid=wxd762ee6ca6d255d2&amp;redirect_uri=https://api.flins.com.cn/zypage&amp;response_type=code&amp;scope=snsapi_base&amp;state=STATE#wechat_redirect</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Boss接口" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">token</stringProp>
              <stringProp name="Header.value">${token}</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取验证码" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;evImgUploadIds&quot;: &quot;[]&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/ev/ocr/batchreceive</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户登录" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;account&quot;: &quot;admin&quot;,&#xd;
	&quot;pwd&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&#xd;
	&quot;captchaToken&quot;:&quot;&quot;,&#xd;
	&quot;captcha&quot;:&quot;&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/boss/auth/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取token" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">token</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建用户" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;account&quot;: &quot;andyzhang&quot;,&#xd;
	&quot;pwd&quot;:&quot;0c8abdb962f042d1857c66dd26b0c87b&quot;,&#xd;
	&quot;name&quot;:&quot;张安迪&quot;,&#xd;
   	 &quot;roleIds&quot;:&quot;1,2,3&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/user/create</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户列表" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;account&quot;: &quot;&quot;,&#xd;
	&quot;name&quot;: &quot;&quot;,&#xd;
	&quot;page&quot;: {&#xd;
		&quot;currentPage&quot;: 1,&#xd;
		&quot;pageSize&quot;: 10&#xd;
	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/user/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="修改密码(自己)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;oriPwd&quot;:&quot;c33367701511b4f6020ec61ded352059&quot;,&#xd;
	&quot;pwd&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;,&#xd;
	&quot;confirmPwd&quot;:&quot;e10adc3949ba59abbe56e057f20f883e&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/user/updatepwd</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="重置密码(管理员)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;:1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/user/resetpwd</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="新增角色" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;name&quot;: &quot;OCR处理&quot;,&#xd;
	&quot;isAdmin&quot;: true,&#xd;
	&quot;code&quot;:  &quot;OCRchuli&quot;,&#xd;
	&quot;sortNo&quot;: 3,&#xd;
	&quot;permissions&quot;: &quot;89&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/boss/role/save</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="角色列表(有分页)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;isAdmin&quot;: false,&#xd;
	&quot;name&quot;: &quot;经理&quot;,&#xd;
	&quot;page&quot;: {&#xd;
		&quot;currentPage&quot;: 1,&#xd;
		&quot;pageSize&quot;: 10&#xd;
	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/role/pagelist</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="角色列表(无分页)" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/role/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户的角色列表" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;userId&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/role/user/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="更新用户角色" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;userId&quot;: 1,&#xd;
	&quot;roleIds&quot;: &quot;2,3,4,5&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/user/setroles</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="权限刷新" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">boss/permission/loadpermission</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">




</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="权限列表(有分页)" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;type&quot;: 3,&#xd;
	&quot;name&quot;: &quot;用户&quot;,&#xd;
	&quot;page&quot;: {&#xd;
		&quot;currentPage&quot;: 1,&#xd;
		&quot;pageSize&quot;: 10&#xd;
	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/permission/pagelist</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="权限列表(无分页)" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/permission/list</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="角色赋权" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;roleId&quot;: 1,&#xd;
	&quot;permissions&quot;: &quot;1,3,4&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/permission/setpermission</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="角色的权限列表" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
		&quot;roleId&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/auth/getAuthorizationData</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="删除用户" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/user/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="用户退出登录" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/auth/logout</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="角色删除" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;id&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/role/delete</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OCR批量领取" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/ev/ocr/batchreceive</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OCR待处理列表" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;page&quot;: {&#xd;
		&quot;pageSize&quot;: 10,&#xd;
		&quot;currentPage&quot;: 1&#xd;
	},&#xd;
	&quot;evRecordNo&quot;: &quot;&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/boss/ev/ocr/unmanagelist</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="接口响应0000" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="650406311">&quot;code&quot;:&quot;0000&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="提取总页码" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">totalPage</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.totalPage</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="判断总页码数是否大于1" enabled="true">
          <stringProp name="IfController.condition">${totalPage} &gt;1</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OCR待处理列表(最后一页)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;page&quot;: {&#xd;
		&quot;pageSize&quot;: 10,&#xd;
		&quot;currentPage&quot;: &quot;${totalPage}&quot;&#xd;
	},&#xd;
	&quot;evRecordNo&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/boss/ev/ocr/unmanagelist</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">import com.alibaba.fastjson.JSONObject;

String response_data = prev.getResponseDataAsString(); 
JSONObject object = JSONObject.parseObject(response_data);
JSONObject data = object.getJSONObject(&quot;data&quot;);
log.info(object);</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
